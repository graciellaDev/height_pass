"use strict";function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)
/*!
 * dist/inputmask.min
 * https://github.com/RobinHerbots/Inputmask
 * Copyright (c) 2010 - 2021 Robin Herbots
 * Licensed under the MIT license
 * Version: 5.0.7-beta.41
 */}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}function _createForOfIteratorHelper(e,t){var i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!i){if(Array.isArray(e)||(i=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){i&&(e=i);var a=0,n=function(){};return{s:n,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,o=!0,l=!1;return{s:function(){i=i.call(e)},n:function(){var e=i.next();return o=e.done,e},e:function(e){l=!0,r=e},f:function(){try{o||null==i.return||i.return()}finally{if(l)throw r}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,a=new Array(t);i<t;i++)a[i]=e[i];return a}!function(e,t){if("object"==("undefined"==typeof exports?"undefined":_typeof(exports))&&"object"==("undefined"==typeof module?"undefined":_typeof(module)))module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var i=t();for(var a in i)("object"==("undefined"==typeof exports?"undefined":_typeof(exports))?exports:e)[a]=i[a]}}(self,(function(){return function(){var e={8741:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=!("undefined"==typeof window||!window.document||!window.document.createElement);t.default=i},3976:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a,n=(a=i(5581))&&a.__esModule?a:{default:a},r={_maxTestPos:500,placeholder:"_",optionalmarker:["[","]"],quantifiermarker:["{","}"],groupmarker:["(",")"],alternatormarker:"|",escapeChar:"\\",mask:null,regex:null,oncomplete:function(){},onincomplete:function(){},oncleared:function(){},repeat:0,greedy:!1,autoUnmask:!1,removeMaskOnSubmit:!1,clearMaskOnLostFocus:!0,insertMode:!0,insertModeVisual:!0,clearIncomplete:!1,alias:null,onKeyDown:function(){},onBeforeMask:null,onBeforePaste:function(e,t){return"function"==typeof t.onBeforeMask?t.onBeforeMask.call(this,e,t):e},onBeforeWrite:null,onUnMask:null,showMaskOnFocus:!0,showMaskOnHover:!0,onKeyValidation:function(){},skipOptionalPartCharacter:" ",numericInput:!1,rightAlign:!1,undoOnEscape:!0,radixPoint:"",_radixDance:!1,groupSeparator:"",keepStatic:null,positionCaretOnTab:!0,tabThrough:!1,supportsInputType:["text","tel","url","password","search"],ignorables:[n.default.BACKSPACE,n.default.TAB,n.default["PAUSE/BREAK"],n.default.ESCAPE,n.default.PAGE_UP,n.default.PAGE_DOWN,n.default.END,n.default.HOME,n.default.LEFT,n.default.UP,n.default.RIGHT,n.default.DOWN,n.default.INSERT,n.default.DELETE,93,112,113,114,115,116,117,118,119,120,121,122,123,0,229],isComplete:null,preValidation:null,postValidation:null,staticDefinitionSymbol:void 0,jitMasking:!1,nullable:!0,inputEventOnly:!1,noValuePatching:!1,positionCaretOnClick:"lvp",casing:null,inputmode:"text",importDataAttributes:!0,shiftPositions:!0,usePrototypeDefinitions:!0,validationEventTimeOut:3e3,substitutes:{}};t.default=r},7392:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,t.default={9:{validator:"[0-9０-９]",definitionSymbol:"*"},a:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",definitionSymbol:"*"},"*":{validator:"[0-9０-９A-Za-zА-яЁёÀ-ÿµ]"}}},253:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i){if(void 0===i)return e.__data?e.__data[t]:null;e.__data=e.__data||{},e.__data[t]=i}},3776:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.Event=void 0,t.off=function(e,t){var i,a;function n(e,t,n){if(e in i==1)if(a.removeEventListener?a.removeEventListener(e,n,!1):a.detachEvent&&a.detachEvent("on"+e,n),"global"===t)for(var r in i[e])i[e][r].splice(i[e][r].indexOf(n),1);else i[e][t].splice(i[e][t].indexOf(n),1)}function r(e,a){var n,r,o=[];if(e.length>0)if(void 0===t)for(n=0,r=i[e][a].length;n<r;n++)o.push({ev:e,namespace:a&&a.length>0?a:"global",handler:i[e][a][n]});else o.push({ev:e,namespace:a&&a.length>0?a:"global",handler:t});else if(a.length>0)for(var l in i)for(var s in i[l])if(s===a)if(void 0===t)for(n=0,r=i[l][s].length;n<r;n++)o.push({ev:l,namespace:s,handler:i[l][s][n]});else o.push({ev:l,namespace:s,handler:t});return o}if(u(this[0])&&e){i=this[0].eventRegistry,a=this[0];for(var o=e.split(" "),l=0;l<o.length;l++)for(var s=o[l].split("."),c=r(s[0],s[1]),f=0,d=c.length;f<d;f++)n(c[f].ev,c[f].namespace,c[f].handler)}return this},t.on=function(e,t){function i(e,i){n.addEventListener?n.addEventListener(e,t,!1):n.attachEvent&&n.attachEvent("on"+e,t),a[e]=a[e]||{},a[e][i]=a[e][i]||[],a[e][i].push(t)}if(u(this[0]))for(var a=this[0].eventRegistry,n=this[0],r=e.split(" "),o=0;o<r.length;o++){var l=r[o].split(".");i(l[0],l[1]||"global")}return this},t.trigger=function(e){if(u(this[0]))for(var t=this[0].eventRegistry,i=this[0],a="string"==typeof e?e.split(" "):[e.type],r=0;r<a.length;r++){var l=a[r].split("."),s=l[0],c=l[1]||"global";if(void 0!==document&&"global"===c){var f,d,p={bubbles:!0,cancelable:!0,detail:arguments[1]};if(document.createEvent){try{"input"===s?(p.inputType="insertText",f=new InputEvent(s,p)):f=new CustomEvent(s,p)}catch(e){(f=document.createEvent("CustomEvent")).initCustomEvent(s,p.bubbles,p.cancelable,p.detail)}e.type&&(0,n.default)(f,e),i.dispatchEvent(f)}else(f=document.createEventObject()).eventType=s,f.detail=arguments[1],e.type&&(0,n.default)(f,e),i.fireEvent("on"+f.eventType,f)}else if(void 0!==t[s])if(arguments[0]=arguments[0].type?arguments[0]:o.default.Event(arguments[0]),arguments[0].detail=arguments.slice(1),"global"===c)for(var h in t[s])for(d=0;d<t[s][h].length;d++)t[s][h][d].apply(i,arguments);else for(d=0;d<t[s][c].length;d++)t[s][c][d].apply(i,arguments)}return this};var a,n=s(i(600)),r=s(i(9380)),o=s(i(4963)),l=s(i(8741));function s(e){return e&&e.__esModule?e:{default:e}}function u(e){return e instanceof Element}t.Event=a,"function"==typeof r.default.CustomEvent?t.Event=a=r.default.CustomEvent:l.default&&(t.Event=a=function(e,t){t=t||{bubbles:!1,cancelable:!1,detail:void 0};var i=document.createEvent("CustomEvent");return i.initCustomEvent(e,t.bubbles,t.cancelable,t.detail),i},a.prototype=r.default.Event.prototype)},600:function(e,t){function i(e){return i="function"==typeof Symbol&&"symbol"==_typeof(Symbol.iterator)?function(e){return _typeof(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":_typeof(e)},i(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function e(){var t,a,n,r,o,l,s=arguments[0]||{},u=1,c=arguments.length,f=!1;for("boolean"==typeof s&&(f=s,s=arguments[u]||{},u++),"object"!==i(s)&&"function"!=typeof s&&(s={});u<c;u++)if(null!=(t=arguments[u]))for(a in t)n=s[a],s!==(r=t[a])&&(f&&r&&("[object Object]"===Object.prototype.toString.call(r)||(o=Array.isArray(r)))?(o?(o=!1,l=n&&Array.isArray(n)?n:[]):l=n&&"[object Object]"===Object.prototype.toString.call(n)?n:{},s[a]=e(f,l,r)):void 0!==r&&(s[a]=r));return s}},4963:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(i(600)),n=l(i(9380)),r=l(i(253)),o=i(3776);function l(e){return e&&e.__esModule?e:{default:e}}var s=n.default.document;function u(e){return e instanceof u?e:this instanceof u?void(null!=e&&e!==n.default&&(this[0]=e.nodeName?e:void 0!==e[0]&&e[0].nodeName?e[0]:s.querySelector(e),void 0!==this[0]&&null!==this[0]&&(this[0].eventRegistry=this[0].eventRegistry||{}))):new u(e)}u.prototype={on:o.on,off:o.off,trigger:o.trigger},u.extend=a.default,u.data=r.default,u.Event=o.Event;var c=u;t.default=c},9845:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.ua=t.mobile=t.iphone=t.iemobile=t.ie=void 0;var a,n=(a=i(9380))&&a.__esModule?a:{default:a},r=n.default.navigator&&n.default.navigator.userAgent||"",o=r.indexOf("MSIE ")>0||r.indexOf("Trident/")>0,l="ontouchstart"in n.default,s=/iemobile/i.test(r),u=/iphone/i.test(r)&&!s;t.iphone=u,t.iemobile=s,t.mobile=l,t.ie=o,t.ua=r},7184:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.replace(i,"\\$1")};var i=new RegExp("(\\"+["/",".","*","+","?","|","(",")","[","]","{","}","\\","$","^"].join("|\\")+")","gim")},6030:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.EventHandlers=void 0;var a,n=i(8711),r=(a=i(5581))&&a.__esModule?a:{default:a},o=i(9845),l=i(7215),s=i(7760),u=i(4713);function c(e,t){var i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!i){if(Array.isArray(e)||(i=function(e,t){if(e){if("string"==typeof e)return f(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?f(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){i&&(e=i);var a=0,n=function(){};return{s:n,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,o=!0,l=!1;return{s:function(){i=i.call(e)},n:function(){var e=i.next();return o=e.done,e},e:function(e){l=!0,r=e},f:function(){try{o||null==i.return||i.return()}finally{if(l)throw r}}}}function f(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,a=new Array(t);i<t;i++)a[i]=e[i];return a}var d={keydownEvent:function(e){var t=this.inputmask,i=t.opts,a=t.dependencyLib,c=t.maskset,f=this,d=a(f),p=e.keyCode,h=n.caret.call(t,f),v=i.onKeyDown.call(this,e,n.getBuffer.call(t),h,i);if(void 0!==v)return v;if(p===r.default.BACKSPACE||p===r.default.DELETE||o.iphone&&p===r.default.BACKSPACE_SAFARI||e.ctrlKey&&p===r.default.X&&!("oncut"in f))e.preventDefault(),l.handleRemove.call(t,f,p,h),(0,s.writeBuffer)(f,n.getBuffer.call(t,!0),c.p,e,f.inputmask._valueGet()!==n.getBuffer.call(t).join(""));else if(p===r.default.END||p===r.default.PAGE_DOWN){e.preventDefault();var m=n.seekNext.call(t,n.getLastValidPosition.call(t));n.caret.call(t,f,e.shiftKey?h.begin:m,m,!0)}else p===r.default.HOME&&!e.shiftKey||p===r.default.PAGE_UP?(e.preventDefault(),n.caret.call(t,f,0,e.shiftKey?h.begin:0,!0)):i.undoOnEscape&&p===r.default.ESCAPE&&!0!==e.altKey?((0,s.checkVal)(f,!0,!1,t.undoValue.split("")),d.trigger("click")):p!==r.default.INSERT||e.shiftKey||e.ctrlKey||void 0!==t.userOptions.insertMode?!0===i.tabThrough&&p===r.default.TAB?!0===e.shiftKey?(h.end=n.seekPrevious.call(t,h.end,!0),!0===u.getTest.call(t,h.end-1).match.static&&h.end--,h.begin=n.seekPrevious.call(t,h.end,!0),h.begin>=0&&h.end>0&&(e.preventDefault(),n.caret.call(t,f,h.begin,h.end))):(h.begin=n.seekNext.call(t,h.begin,!0),h.end=n.seekNext.call(t,h.begin,!0),h.end<c.maskLength&&h.end--,h.begin<=c.maskLength&&(e.preventDefault(),n.caret.call(t,f,h.begin,h.end))):e.shiftKey||i.insertModeVisual&&!1===i.insertMode&&(p===r.default.RIGHT?setTimeout((function(){var e=n.caret.call(t,f);n.caret.call(t,f,e.begin)}),0):p===r.default.LEFT&&setTimeout((function(){var e=n.translatePosition.call(t,f.inputmask.caretPos.begin);n.translatePosition.call(t,f.inputmask.caretPos.end),t.isRTL?n.caret.call(t,f,e+(e===c.maskLength?0:1)):n.caret.call(t,f,e-(0===e?0:1))}),0)):l.isSelection.call(t,h)?i.insertMode=!i.insertMode:(i.insertMode=!i.insertMode,n.caret.call(t,f,h.begin,h.begin));t.ignorable=i.ignorables.includes(p)},keypressEvent:function(e,t,i,a,o){var u=this.inputmask||this,c=u.opts,f=u.dependencyLib,d=u.maskset,p=u.el,h=f(p),v=e.keyCode;if(!(!0===t||e.ctrlKey&&e.altKey)&&(e.ctrlKey||e.metaKey||u.ignorable))return v===r.default.ENTER&&u.undoValue!==u._valueGet(!0)&&(u.undoValue=u._valueGet(!0),setTimeout((function(){h.trigger("change")}),0)),u.skipInputEvent=!0,!0;if(v){44!==v&&46!==v||3!==e.location||""===c.radixPoint||(v=c.radixPoint.charCodeAt(0));var m,g=t?{begin:o,end:o}:n.caret.call(u,p),y=String.fromCharCode(v);y=c.substitutes[y]||y,d.writeOutBuffer=!0;var b=l.isValid.call(u,g,y,a,void 0,void 0,void 0,t);if(!1!==b&&(n.resetMaskSet.call(u,!0),m=void 0!==b.caret?b.caret:n.seekNext.call(u,b.pos.begin?b.pos.begin:b.pos),d.p=m),m=c.numericInput&&void 0===b.caret?n.seekPrevious.call(u,m):m,!1!==i&&(setTimeout((function(){c.onKeyValidation.call(p,v,b)}),0),d.writeOutBuffer&&!1!==b)){var k=n.getBuffer.call(u);(0,s.writeBuffer)(p,k,m,e,!0!==t)}if(e.preventDefault(),t)return!1!==b&&(b.forwardPosition=m),b}},keyupEvent:function(e){var t=this.inputmask;!t.isComposing||e.keyCode!==r.default.KEY_229&&e.keyCode!==r.default.ENTER||t.$el.trigger("input")},pasteEvent:function(e){var t,i=this.inputmask,a=i.opts,r=i._valueGet(!0),o=n.caret.call(i,this);i.isRTL&&(t=o.end,o.end=n.translatePosition.call(i,o.begin),o.begin=n.translatePosition.call(i,t));var l=r.substr(0,o.begin),u=r.substr(o.end,r.length);if(l==(i.isRTL?n.getBufferTemplate.call(i).slice().reverse():n.getBufferTemplate.call(i)).slice(0,o.begin).join("")&&(l=""),u==(i.isRTL?n.getBufferTemplate.call(i).slice().reverse():n.getBufferTemplate.call(i)).slice(o.end).join("")&&(u=""),window.clipboardData&&window.clipboardData.getData)r=l+window.clipboardData.getData("Text")+u;else{if(!e.clipboardData||!e.clipboardData.getData)return!0;r=l+e.clipboardData.getData("text/plain")+u}var f=r;if(i.isRTL){f=f.split("");var d,p=c(n.getBufferTemplate.call(i));try{for(p.s();!(d=p.n()).done;){var h=d.value;f[0]===h&&f.shift()}}catch(e){p.e(e)}finally{p.f()}f=f.join("")}if("function"==typeof a.onBeforePaste){if(!1===(f=a.onBeforePaste.call(i,f,a)))return!1;f||(f=r)}(0,s.checkVal)(this,!0,!1,f.toString().split(""),e),e.preventDefault()},inputFallBackEvent:function(e){var t=this.inputmask,i=t.opts,a=t.dependencyLib,l=this,c=l.inputmask._valueGet(!0),f=(t.isRTL?n.getBuffer.call(t).slice().reverse():n.getBuffer.call(t)).join(""),p=n.caret.call(t,l,void 0,void 0,!0);if(f!==c){c=function(e,i,a){if(o.iemobile){var r=i.replace(n.getBuffer.call(t).join(""),"");if(1===r.length){var l=i.split("");l.splice(a.begin,0,r),i=l.join("")}}return i}(0,c,p);var h=function(e,a,r){for(var o,l,s,c=e.substr(0,r.begin).split(""),f=e.substr(r.begin).split(""),d=a.substr(0,r.begin).split(""),p=a.substr(r.begin).split(""),h=c.length>=d.length?c.length:d.length,v=f.length>=p.length?f.length:p.length,m="",g=[],y="~";c.length<h;)c.push(y);for(;d.length<h;)d.push(y);for(;f.length<v;)f.unshift(y);for(;p.length<v;)p.unshift(y);var b=c.concat(f),k=d.concat(p);for(l=0,o=b.length;l<o;l++)switch(s=u.getPlaceholder.call(t,n.translatePosition.call(t,l)),m){case"insertText":k[l-1]===b[l]&&r.begin==b.length-1&&g.push(b[l]),l=o;break;case"insertReplacementText":case"deleteContentBackward":b[l]===y?r.end++:l=o;break;default:b[l]!==k[l]&&(b[l+1]!==y&&b[l+1]!==s&&void 0!==b[l+1]||(k[l]!==s||k[l+1]!==y)&&k[l]!==y?k[l+1]===y&&k[l]===b[l+1]?(m="insertText",g.push(b[l]),r.begin--,r.end--):b[l]!==s&&b[l]!==y&&(b[l+1]===y||k[l]!==b[l]&&k[l+1]===b[l+1])?(m="insertReplacementText",g.push(b[l]),r.begin--):b[l]===y?(m="deleteContentBackward",(n.isMask.call(t,n.translatePosition.call(t,l),!0)||k[l]===i.radixPoint)&&r.end++):l=o:(m="insertText",g.push(b[l]),r.begin--,r.end--))}return{action:m,data:g,caret:r}}(c,f,p);switch((l.inputmask.shadowRoot||l.ownerDocument).activeElement!==l&&l.focus(),(0,s.writeBuffer)(l,n.getBuffer.call(t)),n.caret.call(t,l,p.begin,p.end,!0),h.action){case"insertText":case"insertReplacementText":h.data.forEach((function(e,i){var n=new a.Event("keypress");n.keyCode=e.charCodeAt(0),t.ignorable=!1,d.keypressEvent.call(l,n)})),setTimeout((function(){t.$el.trigger("keyup")}),0);break;case"deleteContentBackward":var v=new a.Event("keydown");v.keyCode=r.default.BACKSPACE,d.keydownEvent.call(l,v);break;default:(0,s.applyInputValue)(l,c)}e.preventDefault()}},compositionendEvent:function(e){var t=this.inputmask;t.isComposing=!1,t.$el.trigger("input")},setValueEvent:function(e){var t=this.inputmask,i=this,a=e&&e.detail?e.detail[0]:arguments[1];void 0===a&&(a=i.inputmask._valueGet(!0)),(0,s.applyInputValue)(i,a),(e.detail&&void 0!==e.detail[1]||void 0!==arguments[2])&&n.caret.call(t,i,e.detail?e.detail[1]:arguments[2])},focusEvent:function(e){var t=this.inputmask,i=t.opts,a=this,r=a.inputmask._valueGet();i.showMaskOnFocus&&r!==n.getBuffer.call(t).join("")&&(0,s.writeBuffer)(a,n.getBuffer.call(t),n.seekNext.call(t,n.getLastValidPosition.call(t))),!0!==i.positionCaretOnTab||!1!==t.mouseEnter||l.isComplete.call(t,n.getBuffer.call(t))&&-1!==n.getLastValidPosition.call(t)||d.clickEvent.apply(a,[e,!0]),t.undoValue=t._valueGet(!0)},invalidEvent:function(e){this.inputmask.validationEvent=!0},mouseleaveEvent:function(){var e=this.inputmask,t=e.opts,i=this;e.mouseEnter=!1,t.clearMaskOnLostFocus&&(i.inputmask.shadowRoot||i.ownerDocument).activeElement!==i&&(0,s.HandleNativePlaceholder)(i,e.originalPlaceholder)},clickEvent:function(e,t){var i=this.inputmask,a=this;if((a.inputmask.shadowRoot||a.ownerDocument).activeElement===a){var r=n.determineNewCaretPosition.call(i,n.caret.call(i,a),t);void 0!==r&&n.caret.call(i,a,r)}},cutEvent:function(e){var t=this.inputmask,i=t.maskset,a=this,o=n.caret.call(t,a),u=t.isRTL?n.getBuffer.call(t).slice(o.end,o.begin):n.getBuffer.call(t).slice(o.begin,o.end),c=t.isRTL?u.reverse().join(""):u.join("");window.navigator.clipboard?window.navigator.clipboard.writeText(c):window.clipboardData&&window.clipboardData.getData&&window.clipboardData.setData("Text",c),l.handleRemove.call(t,a,r.default.DELETE,o),(0,s.writeBuffer)(a,n.getBuffer.call(t),i.p,e,t.undoValue!==t._valueGet(!0))},blurEvent:function(e){var t=this.inputmask,i=t.opts,a=(0,t.dependencyLib)(this),r=this;if(r.inputmask){(0,s.HandleNativePlaceholder)(r,t.originalPlaceholder);var o=r.inputmask._valueGet(),u=n.getBuffer.call(t).slice();""!==o&&(i.clearMaskOnLostFocus&&(-1===n.getLastValidPosition.call(t)&&o===n.getBufferTemplate.call(t).join("")?u=[]:s.clearOptionalTail.call(t,u)),!1===l.isComplete.call(t,u)&&(setTimeout((function(){a.trigger("incomplete")}),0),i.clearIncomplete&&(n.resetMaskSet.call(t),u=i.clearMaskOnLostFocus?[]:n.getBufferTemplate.call(t).slice())),(0,s.writeBuffer)(r,u,void 0,e)),t.undoValue!==t._valueGet(!0)&&(t.undoValue=t._valueGet(!0),a.trigger("change"))}},mouseenterEvent:function(){var e=this.inputmask,t=e.opts,i=this;if(e.mouseEnter=!0,(i.inputmask.shadowRoot||i.ownerDocument).activeElement!==i){var a=(e.isRTL?n.getBufferTemplate.call(e).slice().reverse():n.getBufferTemplate.call(e)).join("");e.placeholder!==a&&i.placeholder!==e.originalPlaceholder&&(e.originalPlaceholder=i.placeholder),t.showMaskOnHover&&(0,s.HandleNativePlaceholder)(i,a)}},submitEvent:function(){var e=this.inputmask,t=e.opts;e.undoValue!==e._valueGet(!0)&&e.$el.trigger("change"),-1===n.getLastValidPosition.call(e)&&e._valueGet&&e._valueGet()===n.getBufferTemplate.call(e).join("")&&e._valueSet(""),t.clearIncomplete&&!1===l.isComplete.call(e,n.getBuffer.call(e))&&e._valueSet(""),t.removeMaskOnSubmit&&(e._valueSet(e.unmaskedvalue(),!0),setTimeout((function(){(0,s.writeBuffer)(e.el,n.getBuffer.call(e))}),0))},resetEvent:function(){var e=this.inputmask;e.refreshValue=!0,setTimeout((function(){(0,s.applyInputValue)(e.el,e._valueGet(!0))}),0)}};t.EventHandlers=d},9716:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.EventRuler=void 0;var a=l(i(2394)),n=l(i(5581)),r=i(8711),o=i(7760);function l(e){return e&&e.__esModule?e:{default:e}}var s={on:function(e,t,i){var l=e.inputmask.dependencyLib,s=function(t){t.originalEvent&&(t=t.originalEvent||t,arguments[0]=t);var s,u=this,c=u.inputmask,f=c?c.opts:void 0;if(void 0===c&&"FORM"!==this.nodeName){var d=l.data(u,"_inputmask_opts");l(u).off(),d&&new a.default(d).mask(u)}else{if(["submit","reset","setvalue"].includes(t.type)||"FORM"===this.nodeName||!(u.disabled||u.readOnly&&!("keydown"===t.type&&t.ctrlKey&&67===t.keyCode||!1===f.tabThrough&&t.keyCode===n.default.TAB))){switch(t.type){case"input":if(!0===c.skipInputEvent||t.inputType&&"insertCompositionText"===t.inputType)return c.skipInputEvent=!1,t.preventDefault();break;case"keydown":c.skipKeyPressEvent=!1,c.skipInputEvent=c.isComposing=t.keyCode===n.default.KEY_229;break;case"keyup":case"compositionend":c.isComposing&&(c.skipInputEvent=!1);break;case"keypress":if(!0===c.skipKeyPressEvent)return t.preventDefault();c.skipKeyPressEvent=!0;break;case"click":case"focus":return c.validationEvent?(c.validationEvent=!1,e.blur(),(0,o.HandleNativePlaceholder)(e,(c.isRTL?r.getBufferTemplate.call(c).slice().reverse():r.getBufferTemplate.call(c)).join("")),setTimeout((function(){e.focus()}),f.validationEventTimeOut),!1):(s=arguments,setTimeout((function(){e.inputmask&&i.apply(u,s)}),0),!1)}var p=i.apply(u,arguments);return!1===p&&(t.preventDefault(),t.stopPropagation()),p}t.preventDefault()}};["submit","reset"].includes(t)?(s=s.bind(e),null!==e.form&&l(e.form).on(t,s)):l(e).on(t,s),e.inputmask.events[t]=e.inputmask.events[t]||[],e.inputmask.events[t].push(s)},off:function(e,t){if(e.inputmask&&e.inputmask.events){var i=e.inputmask.dependencyLib,a=e.inputmask.events;for(var n in t&&((a=[])[t]=e.inputmask.events[t]),a){for(var r=a[n];r.length>0;){var o=r.pop();["submit","reset"].includes(n)?null!==e.form&&i(e.form).off(n,o):i(e).off(n,o)}delete e.inputmask.events[n]}}}};t.EventRuler=s},219:function(e,t,i){var a=f(i(2394)),n=f(i(5581)),r=f(i(7184)),o=i(8711),l=i(4713);function s(e){return s="function"==typeof Symbol&&"symbol"==_typeof(Symbol.iterator)?function(e){return _typeof(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":_typeof(e)},s(e)}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,a=new Array(t);i<t;i++)a[i]=e[i];return a}function c(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function f(e){return e&&e.__esModule?e:{default:e}}var d=a.default.dependencyLib,p=function(){function e(t,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.mask=t,this.format=i,this.opts=a,this._date=new Date(1,0,1),this.initDateObject(t,this.opts)}var t,i;return t=e,(i=[{key:"date",get:function(){return void 0===this._date&&(this._date=new Date(1,0,1),this.initDateObject(void 0,this.opts)),this._date}},{key:"initDateObject",value:function(e,t){var i;for(x(t).lastIndex=0;i=x(t).exec(this.format);){var a=new RegExp("\\d+$").exec(i[0]),n=a?i[0][0]+"x":i[0],r=void 0;if(void 0!==e){if(a){var o=x(t).lastIndex,l=C(i.index,t);x(t).lastIndex=o,r=e.slice(0,e.indexOf(l.nextMatch[0]))}else r=e.slice(0,n.length);e=e.slice(r.length)}Object.prototype.hasOwnProperty.call(m,n)&&this.setValue(this,r,n,m[n][2],m[n][1])}}},{key:"setValue",value:function(e,t,i,a,n){if(void 0!==t&&(e[a]="ampm"===a?t:t.replace(/[^0-9]/g,"0"),e["raw"+a]=t.replace(/\s/g,"_")),void 0!==n){var r=e[a];("day"===a&&29===parseInt(r)||"month"===a&&2===parseInt(r))&&(29!==parseInt(e.day)||2!==parseInt(e.month)||""!==e.year&&void 0!==e.year||e._date.setFullYear(2012,1,29)),"day"===a&&(v=!0,0===parseInt(r)&&(r=1)),"month"===a&&(v=!0),"year"===a&&(v=!0,r.length<4&&(r=S(r,4,!0))),""===r||isNaN(r)||n.call(e._date,r),"ampm"===a&&n.call(e._date,r)}}},{key:"reset",value:function(){this._date=new Date(1,0,1)}},{key:"reInit",value:function(){this._date=void 0,this.date}}])&&c(t.prototype,i),Object.defineProperty(t,"prototype",{writable:!1}),e}(),h=(new Date).getFullYear(),v=!1,m={d:["[1-9]|[12][0-9]|3[01]",Date.prototype.setDate,"day",Date.prototype.getDate],dd:["0[1-9]|[12][0-9]|3[01]",Date.prototype.setDate,"day",function(){return S(Date.prototype.getDate.call(this),2)}],ddd:[""],dddd:[""],m:["[1-9]|1[012]",function(e){var t=e?parseInt(e):0;return t>0&&t--,Date.prototype.setMonth.call(this,t)},"month",function(){return Date.prototype.getMonth.call(this)+1}],mm:["0[1-9]|1[012]",function(e){var t=e?parseInt(e):0;return t>0&&t--,Date.prototype.setMonth.call(this,t)},"month",function(){return S(Date.prototype.getMonth.call(this)+1,2)}],mmm:[""],mmmm:[""],yy:["[0-9]{2}",Date.prototype.setFullYear,"year",function(){return S(Date.prototype.getFullYear.call(this),2)}],yyyy:["[0-9]{4}",Date.prototype.setFullYear,"year",function(){return S(Date.prototype.getFullYear.call(this),4)}],h:["[1-9]|1[0-2]",Date.prototype.setHours,"hours",Date.prototype.getHours],hh:["0[1-9]|1[0-2]",Date.prototype.setHours,"hours",function(){return S(Date.prototype.getHours.call(this),2)}],hx:[function(e){return"[0-9]{".concat(e,"}")},Date.prototype.setHours,"hours",function(e){return Date.prototype.getHours}],H:["1?[0-9]|2[0-3]",Date.prototype.setHours,"hours",Date.prototype.getHours],HH:["0[0-9]|1[0-9]|2[0-3]",Date.prototype.setHours,"hours",function(){return S(Date.prototype.getHours.call(this),2)}],Hx:[function(e){return"[0-9]{".concat(e,"}")},Date.prototype.setHours,"hours",function(e){return function(){return S(Date.prototype.getHours.call(this),e)}}],M:["[1-5]?[0-9]",Date.prototype.setMinutes,"minutes",Date.prototype.getMinutes],MM:["0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]",Date.prototype.setMinutes,"minutes",function(){return S(Date.prototype.getMinutes.call(this),2)}],s:["[1-5]?[0-9]",Date.prototype.setSeconds,"seconds",Date.prototype.getSeconds],ss:["0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]",Date.prototype.setSeconds,"seconds",function(){return S(Date.prototype.getSeconds.call(this),2)}],l:["[0-9]{3}",Date.prototype.setMilliseconds,"milliseconds",function(){return S(Date.prototype.getMilliseconds.call(this),3)}],L:["[0-9]{2}",Date.prototype.setMilliseconds,"milliseconds",function(){return S(Date.prototype.getMilliseconds.call(this),2)}],t:["[ap]",y,"ampm",b,1],tt:["[ap]m",y,"ampm",b,2],T:["[AP]",y,"ampm",b,1],TT:["[AP]M",y,"ampm",b,2],Z:[".*",void 0,"Z",function(){var e=this.toString().match(/\((.+)\)/)[1];return e.includes(" ")&&(e=(e=e.replace("-"," ").toUpperCase()).split(" ").map((function(e){return function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var i=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=i){var a,n,r=[],o=!0,l=!1;try{for(i=i.call(e);!(o=(a=i.next()).done)&&(r.push(a.value),!t||r.length!==t);o=!0);}catch(e){l=!0,n=e}finally{try{o||null==i.return||i.return()}finally{if(l)throw n}}return r}}(e,t)||function(e,t){if(e){if("string"==typeof e)return u(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?u(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(e,1)[0]})).join("")),e}],o:[""],S:[""]},g={isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:ss",isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"};function y(e){var t=this.getHours();e.toLowerCase().includes("p")?this.setHours(t+12):e.toLowerCase().includes("a")&&t>=12&&this.setHours(t-12)}function b(){var e=this.getHours();return(e=e||12)>=12?"PM":"AM"}function k(e){var t=new RegExp("\\d+$").exec(e[0]);if(t&&void 0!==t[0]){var i=m[e[0][0]+"x"].slice("");return i[0]=i[0](t[0]),i[3]=i[3](t[0]),i}if(m[e[0]])return m[e[0]]}function x(e){if(!e.tokenizer){var t=[],i=[];for(var a in m)if(/\.*x$/.test(a)){var n=a[0]+"\\d+";-1===i.indexOf(n)&&i.push(n)}else-1===t.indexOf(a[0])&&t.push(a[0]);e.tokenizer="("+(i.length>0?i.join("|")+"|":"")+t.join("+|")+")+?|.",e.tokenizer=new RegExp(e.tokenizer,"g")}return e.tokenizer}function _(e,t,i){if(!v)return!0;if(void 0===e.rawday||!isFinite(e.rawday)&&new Date(e.date.getFullYear(),isFinite(e.rawmonth)?e.month:e.date.getMonth()+1,0).getDate()>=e.day||"29"==e.day&&(!isFinite(e.rawyear)||void 0===e.rawyear||""===e.rawyear)||new Date(e.date.getFullYear(),isFinite(e.rawmonth)?e.month:e.date.getMonth()+1,0).getDate()>=e.day)return t;if("29"==e.day){var a=C(t.pos,i);if("yyyy"===a.targetMatch[0]&&t.pos-a.targetMatchIndex==2)return t.remove=t.pos+1,t}else if("02"==e.month&&"30"==e.day&&void 0!==t.c)return e.day="03",e.date.setDate(3),e.date.setMonth(1),t.insert=[{pos:t.pos,c:"0"},{pos:t.pos+1,c:t.c}],t.caret=o.seekNext.call(this,t.pos+1),t;return!1}function E(e,t,i,a){var n,o,l="";for(x(i).lastIndex=0;n=x(i).exec(e);)if(void 0===t)if(o=k(n))l+="("+o[0]+")";else switch(n[0]){case"[":l+="(";break;case"]":l+=")?";break;default:l+=(0,r.default)(n[0])}else(o=k(n))?!0!==a&&o[3]?l+=o[3].call(t.date):o[2]?l+=t["raw"+o[2]]:l+=n[0]:l+=n[0];return l}function S(e,t,i){for(e=String(e),t=t||2;e.length<t;)e=i?e+"0":"0"+e;return e}function w(e,t,i){return"string"==typeof e?new p(e,t,i):e&&"object"===s(e)&&Object.prototype.hasOwnProperty.call(e,"date")?e:void 0}function P(e,t){return E(t.inputFormat,{date:e},t)}function C(e,t){var i,a,n=0,r=0;for(x(t).lastIndex=0;a=x(t).exec(t.inputFormat);){var o=new RegExp("\\d+$").exec(a[0]);if((n+=r=o?parseInt(o[0]):a[0].length)>=e+1){i=a,a=x(t).exec(t.inputFormat);break}}return{targetMatchIndex:n-r,nextMatch:a,targetMatch:i}}a.default.extendAliases({datetime:{mask:function(e){return e.numericInput=!1,m.S=e.i18n.ordinalSuffix.join("|"),e.inputFormat=g[e.inputFormat]||e.inputFormat,e.displayFormat=g[e.displayFormat]||e.displayFormat||e.inputFormat,e.outputFormat=g[e.outputFormat]||e.outputFormat||e.inputFormat,e.placeholder=""!==e.placeholder?e.placeholder:e.inputFormat.replace(/[[\]]/,""),e.regex=E(e.inputFormat,void 0,e),e.min=w(e.min,e.inputFormat,e),e.max=w(e.max,e.inputFormat,e),null},placeholder:"",inputFormat:"isoDateTime",displayFormat:null,outputFormat:null,min:null,max:null,skipOptionalPartCharacter:"",i18n:{dayNames:["Mon","Tue","Wed","Thu","Fri","Sat","Sun","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"],ordinalSuffix:["st","nd","rd","th"]},preValidation:function(e,t,i,a,n,r,o,l){if(l)return!0;if(isNaN(i)&&e[t]!==i){var s=C(t,n);if(s.nextMatch&&s.nextMatch[0]===i&&s.targetMatch[0].length>1){var u=m[s.targetMatch[0]][0];if(new RegExp(u).test("0"+e[t-1]))return e[t]=e[t-1],e[t-1]="0",{fuzzy:!0,buffer:e,refreshFromBuffer:{start:t-1,end:t+1},pos:t+1}}}return!0},postValidation:function(e,t,i,a,n,r,o,s){var u,c;if(o)return!0;if(!1===a&&(((u=C(t+1,n)).targetMatch&&u.targetMatchIndex===t&&u.targetMatch[0].length>1&&void 0!==m[u.targetMatch[0]]||(u=C(t+2,n)).targetMatch&&u.targetMatchIndex===t+1&&u.targetMatch[0].length>1&&void 0!==m[u.targetMatch[0]])&&(c=m[u.targetMatch[0]][0]),void 0!==c&&(void 0!==r.validPositions[t+1]&&new RegExp(c).test(i+"0")?(e[t]=i,e[t+1]="0",a={pos:t+2,caret:t}):new RegExp(c).test("0"+i)&&(e[t]="0",e[t+1]=i,a={pos:t+2})),!1===a))return a;if(a.fuzzy&&(e=a.buffer,t=a.pos),(u=C(t,n)).targetMatch&&u.targetMatch[0]&&void 0!==m[u.targetMatch[0]]){var f=m[u.targetMatch[0]];c=f[0];var d=e.slice(u.targetMatchIndex,u.targetMatchIndex+u.targetMatch[0].length);if(!1===new RegExp(c).test(d.join(""))&&2===u.targetMatch[0].length&&r.validPositions[u.targetMatchIndex]&&r.validPositions[u.targetMatchIndex+1]&&(r.validPositions[u.targetMatchIndex+1].input="0"),"year"==f[2])for(var p=l.getMaskTemplate.call(this,!1,1,void 0,!0),v=t+1;v<e.length;v++)e[v]=p[v],delete r.validPositions[v]}var g=a,y=w(e.join(""),n.inputFormat,n);return g&&y.date.getTime()==y.date.getTime()&&(n.prefillYear&&(g=function(e,t,i){if(e.year!==e.rawyear){var a=h.toString(),n=e.rawyear.replace(/[^0-9]/g,""),r=a.slice(0,n.length),o=a.slice(n.length);if(2===n.length&&n===r){var l=new Date(h,e.month-1,e.day);e.day==l.getDate()&&(!i.max||i.max.date.getTime()>=l.getTime())&&(e.date.setFullYear(h),e.year=a,t.insert=[{pos:t.pos+1,c:o[0]},{pos:t.pos+2,c:o[1]}])}}return t}(y,g,n)),g=function(e,t,i,a,n){if(!t)return t;if(t&&i.min&&i.min.date.getTime()==i.min.date.getTime()){var r;for(e.reset(),x(i).lastIndex=0;r=x(i).exec(i.inputFormat);){var o;if((o=k(r))&&o[3]){for(var l=o[1],s=e[o[2]],u=i.min[o[2]],c=i.max?i.max[o[2]]:u,f=[],d=!1,p=0;p<u.length;p++)void 0!==a.validPositions[p+r.index]||d?(f[p]=s[p],d=d||s[p]>u[p]):(f[p]=u[p],"year"===o[2]&&s.length-1==p&&u!=c&&(f=(parseInt(f.join(""))+1).toString().split("")),"ampm"===o[2]&&u!=c&&i.min.date.getTime()>e.date.getTime()&&(f[p]=c[p]));l.call(e._date,f.join(""))}}t=i.min.date.getTime()<=e.date.getTime(),e.reInit()}return t&&i.max&&i.max.date.getTime()==i.max.date.getTime()&&(t=i.max.date.getTime()>=e.date.getTime()),t}(y,g=_.call(this,y,g,n),n,r)),void 0!==t&&g&&a.pos!==t?{buffer:E(n.inputFormat,y,n).split(""),refreshFromBuffer:{start:t,end:a.pos},pos:a.caret||a.pos}:g},onKeyDown:function(e,t,i,a){e.ctrlKey&&e.keyCode===n.default.RIGHT&&(this.inputmask._valueSet(P(new Date,a)),d(this).trigger("setvalue"))},onUnMask:function(e,t,i){return t?E(i.outputFormat,w(e,i.inputFormat,i),i,!0):t},casing:function(e,t,i,a){return 0==t.nativeDef.indexOf("[ap]")?e.toLowerCase():0==t.nativeDef.indexOf("[AP]")?e.toUpperCase():e},onBeforeMask:function(e,t){return"[object Date]"===Object.prototype.toString.call(e)&&(e=P(e,t)),e},insertMode:!1,shiftPositions:!1,keepStatic:!1,inputmode:"numeric",prefillYear:!0}})},3851:function(e,t,i){var a,n=(a=i(2394))&&a.__esModule?a:{default:a},r=i(8711),o=i(4713);n.default.extendDefinitions({A:{validator:"[A-Za-zА-яЁёÀ-ÿµ]",casing:"upper"},"&":{validator:"[0-9A-Za-zА-яЁёÀ-ÿµ]",casing:"upper"},"#":{validator:"[0-9A-Fa-f]",casing:"upper"}});var l=new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]");function s(e,t,i,a,n){return i-1>-1&&"."!==t.buffer[i-1]?(e=t.buffer[i-1]+e,e=i-2>-1&&"."!==t.buffer[i-2]?t.buffer[i-2]+e:"0"+e):e="00"+e,l.test(e)}n.default.extendAliases({cssunit:{regex:"[+-]?[0-9]+\\.?([0-9]+)?(px|em|rem|ex|%|in|cm|mm|pt|pc)"},url:{regex:"(https?|ftp)://.*",autoUnmask:!1,keepStatic:!1,tabThrough:!0},ip:{mask:"i{1,3}.j{1,3}.k{1,3}.l{1,3}",definitions:{i:{validator:s},j:{validator:s},k:{validator:s},l:{validator:s}},onUnMask:function(e,t,i){return e},inputmode:"numeric"},email:{mask:function(e){var t="*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",i=t;if(e.separator)for(var a=0;a<e.quantifier;a++)i+="[".concat(e.separator).concat(t,"]");return i},greedy:!1,casing:"lower",separator:null,quantifier:5,skipOptionalPartCharacter:"",onBeforePaste:function(e,t){return(e=e.toLowerCase()).replace("mailto:","")},definitions:{"*":{validator:"[0-9１-９A-Za-zА-яЁёÀ-ÿµ!#$%&'*+/=?^_`{|}~-]"},"-":{validator:"[0-9A-Za-z-]"}},onUnMask:function(e,t,i){return e},inputmode:"email"},mac:{mask:"##:##:##:##:##:##"},vin:{mask:"V{13}9{4}",definitions:{V:{validator:"[A-HJ-NPR-Za-hj-npr-z\\d]",casing:"upper"}},clearIncomplete:!0,autoUnmask:!0},ssn:{mask:"999-99-9999",postValidation:function(e,t,i,a,n,l,s){var u=o.getMaskTemplate.call(this,!0,r.getLastValidPosition.call(this),!0,!0);return/^(?!219-09-9999|078-05-1120)(?!666|000|9.{2}).{3}-(?!00).{2}-(?!0{4}).{4}$/.test(u.join(""))}}})},207:function(e,t,i){var a=l(i(2394)),n=l(i(5581)),r=l(i(7184)),o=i(8711);function l(e){return e&&e.__esModule?e:{default:e}}var s=a.default.dependencyLib;function u(e,t){for(var i="",n=0;n<e.length;n++)a.default.prototype.definitions[e.charAt(n)]||t.definitions[e.charAt(n)]||t.optionalmarker[0]===e.charAt(n)||t.optionalmarker[1]===e.charAt(n)||t.quantifiermarker[0]===e.charAt(n)||t.quantifiermarker[1]===e.charAt(n)||t.groupmarker[0]===e.charAt(n)||t.groupmarker[1]===e.charAt(n)||t.alternatormarker===e.charAt(n)?i+="\\"+e.charAt(n):i+=e.charAt(n);return i}function c(e,t,i,a){if(e.length>0&&t>0&&(!i.digitsOptional||a)){var n=e.indexOf(i.radixPoint),r=!1;i.negationSymbol.back===e[e.length-1]&&(r=!0,e.length--),-1===n&&(e.push(i.radixPoint),n=e.length-1);for(var o=1;o<=t;o++)isFinite(e[n+o])||(e[n+o]="0")}return r&&e.push(i.negationSymbol.back),e}function f(e,t){var i=0;if("+"===e){for(i in t.validPositions);i=o.seekNext.call(this,parseInt(i))}for(var a in t.tests)if((a=parseInt(a))>=i)for(var n=0,r=t.tests[a].length;n<r;n++)if((void 0===t.validPositions[a]||"-"===e)&&t.tests[a][n].match.def===e)return a+(void 0!==t.validPositions[a]&&"-"!==e?1:0);return i}function d(e,t){var i=-1;for(var a in t.validPositions){var n=t.validPositions[a];if(n&&n.match.def===e){i=parseInt(a);break}}return i}function p(e,t,i,a,n){var r=t.buffer?t.buffer.indexOf(n.radixPoint):-1,o=(-1!==r||a&&n.jitMasking)&&new RegExp(n.definitions[9].validator).test(e);return n._radixDance&&-1!==r&&o&&null==t.validPositions[r]?{insert:{pos:r===i?r+1:r,c:n.radixPoint},pos:i}:o}a.default.extendAliases({numeric:{mask:function(e){e.repeat=0,e.groupSeparator===e.radixPoint&&e.digits&&"0"!==e.digits&&("."===e.radixPoint?e.groupSeparator=",":","===e.radixPoint?e.groupSeparator=".":e.groupSeparator="")," "===e.groupSeparator&&(e.skipOptionalPartCharacter=void 0),e.placeholder.length>1&&(e.placeholder=e.placeholder.charAt(0)),"radixFocus"===e.positionCaretOnClick&&""===e.placeholder&&(e.positionCaretOnClick="lvp");var t="0",i=e.radixPoint;!0===e.numericInput&&void 0===e.__financeInput?(t="1",e.positionCaretOnClick="radixFocus"===e.positionCaretOnClick?"lvp":e.positionCaretOnClick,e.digitsOptional=!1,isNaN(e.digits)&&(e.digits=2),e._radixDance=!1,i=","===e.radixPoint?"?":"!",""!==e.radixPoint&&void 0===e.definitions[i]&&(e.definitions[i]={},e.definitions[i].validator="["+e.radixPoint+"]",e.definitions[i].placeholder=e.radixPoint,e.definitions[i].static=!0,e.definitions[i].generated=!0)):(e.__financeInput=!1,e.numericInput=!0);var a,n="[+]";if(n+=u(e.prefix,e),""!==e.groupSeparator?(void 0===e.definitions[e.groupSeparator]&&(e.definitions[e.groupSeparator]={},e.definitions[e.groupSeparator].validator="["+e.groupSeparator+"]",e.definitions[e.groupSeparator].placeholder=e.groupSeparator,e.definitions[e.groupSeparator].static=!0,e.definitions[e.groupSeparator].generated=!0),n+=e._mask(e)):n+="9{+}",void 0!==e.digits&&0!==e.digits){var o=e.digits.toString().split(",");isFinite(o[0])&&o[1]&&isFinite(o[1])?n+=i+t+"{"+e.digits+"}":(isNaN(e.digits)||parseInt(e.digits)>0)&&(e.digitsOptional||e.jitMasking?(a=n+i+t+"{0,"+e.digits+"}",e.keepStatic=!0):n+=i+t+"{"+e.digits+"}")}else e.inputmode="numeric";return n+=u(e.suffix,e),n+="[-]",a&&(n=[a+u(e.suffix,e)+"[-]",n]),e.greedy=!1,function(e){void 0===e.parseMinMaxOptions&&(null!==e.min&&(e.min=e.min.toString().replace(new RegExp((0,r.default)(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.min=e.min.replace(e.radixPoint,".")),e.min=isFinite(e.min)?parseFloat(e.min):NaN,isNaN(e.min)&&(e.min=Number.MIN_VALUE)),null!==e.max&&(e.max=e.max.toString().replace(new RegExp((0,r.default)(e.groupSeparator),"g"),""),","===e.radixPoint&&(e.max=e.max.replace(e.radixPoint,".")),e.max=isFinite(e.max)?parseFloat(e.max):NaN,isNaN(e.max)&&(e.max=Number.MAX_VALUE)),e.parseMinMaxOptions="done")}(e),""!==e.radixPoint&&(e.substitutes["."==e.radixPoint?",":"."]=e.radixPoint),n},_mask:function(e){return"("+e.groupSeparator+"999){+|1}"},digits:"*",digitsOptional:!0,enforceDigitsOnBlur:!1,radixPoint:".",positionCaretOnClick:"radixFocus",_radixDance:!0,groupSeparator:"",allowMinus:!0,negationSymbol:{front:"-",back:""},prefix:"",suffix:"",min:null,max:null,SetMaxOnOverflow:!1,step:1,inputType:"text",unmaskAsNumber:!1,roundingFN:Math.round,inputmode:"decimal",shortcuts:{k:"1000",m:"1000000"},placeholder:"0",greedy:!1,rightAlign:!0,insertMode:!0,autoUnmask:!1,skipOptionalPartCharacter:"",usePrototypeDefinitions:!1,definitions:{0:{validator:p},1:{validator:p,definitionSymbol:"9"},9:{validator:"[0-9０-９٠-٩۰-۹]",definitionSymbol:"*"},"+":{validator:function(e,t,i,a,n){return n.allowMinus&&("-"===e||e===n.negationSymbol.front)}},"-":{validator:function(e,t,i,a,n){return n.allowMinus&&e===n.negationSymbol.back}}},preValidation:function(e,t,i,a,n,r,o,l){if(!1!==n.__financeInput&&i===n.radixPoint)return!1;var s=e.indexOf(n.radixPoint),u=t;if(t=function(e,t,i,a,n){return n._radixDance&&n.numericInput&&t!==n.negationSymbol.back&&e<=i&&(i>0||t==n.radixPoint)&&(void 0===a.validPositions[e-1]||a.validPositions[e-1].input!==n.negationSymbol.back)&&(e-=1),e}(t,i,s,r,n),"-"===i||i===n.negationSymbol.front){if(!0!==n.allowMinus)return!1;var c=!1,p=d("+",r),h=d("-",r);return-1!==p&&(c=[p,h]),!1!==c?{remove:c,caret:u-n.negationSymbol.back.length}:{insert:[{pos:f.call(this,"+",r),c:n.negationSymbol.front,fromIsValid:!0},{pos:f.call(this,"-",r),c:n.negationSymbol.back,fromIsValid:void 0}],caret:u+n.negationSymbol.back.length}}if(i===n.groupSeparator)return{caret:u};if(l)return!0;if(-1!==s&&!0===n._radixDance&&!1===a&&i===n.radixPoint&&void 0!==n.digits&&(isNaN(n.digits)||parseInt(n.digits)>0)&&s!==t)return{caret:n._radixDance&&t===s-1?s+1:s};if(!1===n.__financeInput)if(a){if(n.digitsOptional)return{rewritePosition:o.end};if(!n.digitsOptional){if(o.begin>s&&o.end<=s)return i===n.radixPoint?{insert:{pos:s+1,c:"0",fromIsValid:!0},rewritePosition:s}:{rewritePosition:s+1};if(o.begin<s)return{rewritePosition:o.begin-1}}}else if(!n.showMaskOnHover&&!n.showMaskOnFocus&&!n.digitsOptional&&n.digits>0&&""===this.__valueGet.call(this.el))return{rewritePosition:s};return{rewritePosition:t}},postValidation:function(e,t,i,a,n,r,o){if(!1===a)return a;if(o)return!0;if(null!==n.min||null!==n.max){var l=n.onUnMask(e.slice().reverse().join(""),void 0,s.extend({},n,{unmaskAsNumber:!0}));if(null!==n.min&&l<n.min&&(l.toString().length>n.min.toString().length||l<0))return!1;if(null!==n.max&&l>n.max)return!!n.SetMaxOnOverflow&&{refreshFromBuffer:!0,buffer:c(n.max.toString().replace(".",n.radixPoint).split(""),n.digits,n).reverse()}}return a},onUnMask:function(e,t,i){if(""===t&&!0===i.nullable)return t;var a=e.replace(i.prefix,"");return a=(a=a.replace(i.suffix,"")).replace(new RegExp((0,r.default)(i.groupSeparator),"g"),""),""!==i.placeholder.charAt(0)&&(a=a.replace(new RegExp(i.placeholder.charAt(0),"g"),"0")),i.unmaskAsNumber?(""!==i.radixPoint&&-1!==a.indexOf(i.radixPoint)&&(a=a.replace(r.default.call(this,i.radixPoint),".")),a=(a=a.replace(new RegExp("^"+(0,r.default)(i.negationSymbol.front)),"-")).replace(new RegExp((0,r.default)(i.negationSymbol.back)+"$"),""),Number(a)):a},isComplete:function(e,t){var i=(t.numericInput?e.slice().reverse():e).join("");return i=(i=(i=(i=(i=i.replace(new RegExp("^"+(0,r.default)(t.negationSymbol.front)),"-")).replace(new RegExp((0,r.default)(t.negationSymbol.back)+"$"),"")).replace(t.prefix,"")).replace(t.suffix,"")).replace(new RegExp((0,r.default)(t.groupSeparator)+"([0-9]{3})","g"),"$1"),","===t.radixPoint&&(i=i.replace((0,r.default)(t.radixPoint),".")),isFinite(i)},onBeforeMask:function(e,t){var i=t.radixPoint||",";isFinite(t.digits)&&(t.digits=parseInt(t.digits)),"number"!=typeof e&&"number"!==t.inputType||""===i||(e=e.toString().replace(".",i));var a="-"===e.charAt(0)||e.charAt(0)===t.negationSymbol.front,n=e.split(i),o=n[0].replace(/[^\-0-9]/g,""),l=n.length>1?n[1].replace(/[^0-9]/g,""):"",s=n.length>1;e=o+(""!==l?i+l:l);var u=0;if(""!==i&&(u=t.digitsOptional?t.digits<l.length?t.digits:l.length:t.digits,""!==l||!t.digitsOptional)){var f=Math.pow(10,u||1);e=e.replace((0,r.default)(i),"."),isNaN(parseFloat(e))||(e=(t.roundingFN(parseFloat(e)*f)/f).toFixed(u)),e=e.toString().replace(".",i)}if(0===t.digits&&-1!==e.indexOf(i)&&(e=e.substring(0,e.indexOf(i))),null!==t.min||null!==t.max){var d=e.toString().replace(i,".");null!==t.min&&d<t.min?e=t.min.toString().replace(".",i):null!==t.max&&d>t.max&&(e=t.max.toString().replace(".",i))}return a&&"-"!==e.charAt(0)&&(e="-"+e),c(e.toString().split(""),u,t,s).join("")},onBeforeWrite:function(e,t,i,a){function n(e,t){if(!1!==a.__financeInput||t){var i=e.indexOf(a.radixPoint);-1!==i&&e.splice(i,1)}if(""!==a.groupSeparator)for(;-1!==(i=e.indexOf(a.groupSeparator));)e.splice(i,1);return e}var o,l=function(e,t){var i=new RegExp("(^"+(""!==t.negationSymbol.front?(0,r.default)(t.negationSymbol.front)+"?":"")+(0,r.default)(t.prefix)+")(.*)("+(0,r.default)(t.suffix)+(""!=t.negationSymbol.back?(0,r.default)(t.negationSymbol.back)+"?":"")+"$)").exec(e.slice().reverse().join("")),a=i?i[2]:"",n=!1;return a&&(a=a.split(t.radixPoint.charAt(0))[0],n=new RegExp("^[0"+t.groupSeparator+"]*").exec(a)),!(!n||!(n[0].length>1||n[0].length>0&&n[0].length<a.length))&&n}(t,a);if(l)for(var u=t.join("").lastIndexOf(l[0].split("").reverse().join(""))-(l[0]==l.input?0:1),f=l[0]==l.input?1:0,d=l[0].length-f;d>0;d--)delete this.maskset.validPositions[u+d],delete t[u+d];if(e)switch(e.type){case"blur":case"checkval":if(null!==a.min){var p=a.onUnMask(t.slice().reverse().join(""),void 0,s.extend({},a,{unmaskAsNumber:!0}));if(null!==a.min&&p<a.min)return{refreshFromBuffer:!0,buffer:c(a.min.toString().replace(".",a.radixPoint).split(""),a.digits,a).reverse()}}if(t[t.length-1]===a.negationSymbol.front){var h=new RegExp("(^"+(""!=a.negationSymbol.front?(0,r.default)(a.negationSymbol.front)+"?":"")+(0,r.default)(a.prefix)+")(.*)("+(0,r.default)(a.suffix)+(""!=a.negationSymbol.back?(0,r.default)(a.negationSymbol.back)+"?":"")+"$)").exec(n(t.slice(),!0).reverse().join(""));0==(h?h[2]:"")&&(o={refreshFromBuffer:!0,buffer:[0]})}else""!==a.radixPoint&&t.indexOf(a.radixPoint)===a.suffix.length&&(o&&o.buffer?o.buffer.splice(0,1+a.suffix.length):(t.splice(0,1+a.suffix.length),o={refreshFromBuffer:!0,buffer:n(t)}));if(a.enforceDigitsOnBlur){var v=(o=o||{})&&o.buffer||t.slice().reverse();o.refreshFromBuffer=!0,o.buffer=c(v,a.digits,a,!0).reverse()}}return o},onKeyDown:function(e,t,i,a){var r,o,l=s(this),u=String.fromCharCode(e.keyCode).toLowerCase();if((o=a.shortcuts&&a.shortcuts[u])&&o.length>1)return this.inputmask.__valueSet.call(this,parseFloat(this.inputmask.unmaskedvalue())*parseInt(o)),l.trigger("setvalue"),!1;if(e.ctrlKey)switch(e.keyCode){case n.default.UP:return this.inputmask.__valueSet.call(this,parseFloat(this.inputmask.unmaskedvalue())+parseInt(a.step)),l.trigger("setvalue"),!1;case n.default.DOWN:return this.inputmask.__valueSet.call(this,parseFloat(this.inputmask.unmaskedvalue())-parseInt(a.step)),l.trigger("setvalue"),!1}if(!e.shiftKey&&(e.keyCode===n.default.DELETE||e.keyCode===n.default.BACKSPACE||e.keyCode===n.default.BACKSPACE_SAFARI)&&i.begin!==t.length){if(t[e.keyCode===n.default.DELETE?i.begin-1:i.end]===a.negationSymbol.front)return r=t.slice().reverse(),""!==a.negationSymbol.front&&r.shift(),""!==a.negationSymbol.back&&r.pop(),l.trigger("setvalue",[r.join(""),i.begin]),!1;if(!0===a._radixDance){var f=t.indexOf(a.radixPoint);if(a.digitsOptional){if(0===f)return(r=t.slice().reverse()).pop(),l.trigger("setvalue",[r.join(""),i.begin>=r.length?r.length:i.begin]),!1}else if(-1!==f&&(i.begin<f||i.end<f||e.keyCode===n.default.DELETE&&i.begin===f))return i.begin!==i.end||e.keyCode!==n.default.BACKSPACE&&e.keyCode!==n.default.BACKSPACE_SAFARI||i.begin++,(r=t.slice().reverse()).splice(r.length-i.begin,i.begin-i.end+1),r=c(r,a.digits,a).join(""),l.trigger("setvalue",[r,i.begin>=r.length?f+1:i.begin]),!1}}}},currency:{prefix:"",groupSeparator:",",alias:"numeric",digits:2,digitsOptional:!1},decimal:{alias:"numeric"},integer:{alias:"numeric",inputmode:"numeric",digits:0},percentage:{alias:"numeric",min:0,max:100,suffix:" %",digits:0,allowMinus:!1},indianns:{alias:"numeric",_mask:function(e){return"("+e.groupSeparator+"99){*|1}("+e.groupSeparator+"999){1|1}"},groupSeparator:",",radixPoint:".",placeholder:"0",digits:2,digitsOptional:!1}})},9380:function(e,t,i){var a;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=((a=i(8741))&&a.__esModule?a:{default:a}).default?window:{};t.default=n},7760:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.HandleNativePlaceholder=function(e,t){var i=e?e.inputmask:this;if(s.ie){if(e.inputmask._valueGet()!==t&&(e.placeholder!==t||""===e.placeholder)){var a=o.getBuffer.call(i).slice(),n=e.inputmask._valueGet();if(n!==t){var r=o.getLastValidPosition.call(i);-1===r&&n===o.getBufferTemplate.call(i).join("")?a=[]:-1!==r&&f.call(i,a),p(e,a)}}}else e.placeholder!==t&&(e.placeholder=t,""===e.placeholder&&e.removeAttribute("placeholder"))},t.applyInputValue=c,t.checkVal=d,t.clearOptionalTail=f,t.unmaskedvalue=function(e){var t=e?e.inputmask:this,i=t.opts,a=t.maskset;if(e){if(void 0===e.inputmask)return e.value;e.inputmask&&e.inputmask.refreshValue&&c(e,e.inputmask._valueGet(!0))}var n=[],r=a.validPositions;for(var l in r)r[l]&&r[l].match&&(1!=r[l].match.static||Array.isArray(a.metadata)&&!0!==r[l].generatedInput)&&n.push(r[l].input);var s=0===n.length?"":(t.isRTL?n.reverse():n).join("");if("function"==typeof i.onUnMask){var u=(t.isRTL?o.getBuffer.call(t).slice().reverse():o.getBuffer.call(t)).join("");s=i.onUnMask.call(t,u,s,i)}return s},t.writeBuffer=p;var a,n=(a=i(5581))&&a.__esModule?a:{default:a},r=i(4713),o=i(8711),l=i(7215),s=i(9845),u=i(6030);function c(e,t){var i=e?e.inputmask:this,a=i.opts;e.inputmask.refreshValue=!1,"function"==typeof a.onBeforeMask&&(t=a.onBeforeMask.call(i,t,a)||t),d(e,!0,!1,t=t.toString().split("")),i.undoValue=i._valueGet(!0),(a.clearMaskOnLostFocus||a.clearIncomplete)&&e.inputmask._valueGet()===o.getBufferTemplate.call(i).join("")&&-1===o.getLastValidPosition.call(i)&&e.inputmask._valueSet("")}function f(e){e.length=0;for(var t,i=r.getMaskTemplate.call(this,!0,0,!0,void 0,!0);void 0!==(t=i.shift());)e.push(t);return e}function d(e,t,i,a,n){var s=e?e.inputmask:this,c=s.maskset,f=s.opts,d=s.dependencyLib,h=a.slice(),v="",m=-1,g=void 0,y=f.skipOptionalPartCharacter;f.skipOptionalPartCharacter="",o.resetMaskSet.call(s),c.tests={},m=f.radixPoint?o.determineNewCaretPosition.call(s,{begin:0,end:0},!1,!1===f.__financeInput?"radixFocus":void 0).begin:0,c.p=m,s.caretPos={begin:m};var b=[],k=s.caretPos;if(h.forEach((function(e,t){if(void 0!==e){var a=new d.Event("_checkval");a.keyCode=e.toString().charCodeAt(0),v+=e;var n=o.getLastValidPosition.call(s,void 0,!0);!function(e,t){for(var i=r.getMaskTemplate.call(s,!0,0).slice(e,o.seekNext.call(s,e,!1,!1)).join("").replace(/'/g,""),a=i.indexOf(t);a>0&&" "===i[a-1];)a--;var n=0===a&&!o.isMask.call(s,e)&&(r.getTest.call(s,e).match.nativeDef===t.charAt(0)||!0===r.getTest.call(s,e).match.static&&r.getTest.call(s,e).match.nativeDef==="'"+t.charAt(0)||" "===r.getTest.call(s,e).match.nativeDef&&(r.getTest.call(s,e+1).match.nativeDef===t.charAt(0)||!0===r.getTest.call(s,e+1).match.static&&r.getTest.call(s,e+1).match.nativeDef==="'"+t.charAt(0)));if(!n&&a>0&&!o.isMask.call(s,e,!1,!0)){var l=o.seekNext.call(s,e);s.caretPos.begin<l&&(s.caretPos={begin:l})}return n}(m,v)?(g=u.EventHandlers.keypressEvent.call(s,a,!0,!1,i,s.caretPos.begin))&&(m=s.caretPos.begin+1,v=""):g=u.EventHandlers.keypressEvent.call(s,a,!0,!1,i,n+1),g?(void 0!==g.pos&&c.validPositions[g.pos]&&!0===c.validPositions[g.pos].match.static&&void 0===c.validPositions[g.pos].alternation&&(b.push(g.pos),s.isRTL||(g.forwardPosition=g.pos+1)),p.call(s,void 0,o.getBuffer.call(s),g.forwardPosition,a,!1),s.caretPos={begin:g.forwardPosition,end:g.forwardPosition},k=s.caretPos):void 0===c.validPositions[t]&&h[t]===r.getPlaceholder.call(s,t)&&o.isMask.call(s,t,!0)?s.caretPos.begin++:s.caretPos=k}})),b.length>0){var x,_,E=o.seekNext.call(s,-1,void 0,!1);if(!l.isComplete.call(s,o.getBuffer.call(s))&&b.length<=E||l.isComplete.call(s,o.getBuffer.call(s))&&b.length>0&&b.length!==E&&0===b[0])for(var S=E;void 0!==(x=b.shift());){var w=new d.Event("_checkval");if((_=c.validPositions[x]).generatedInput=!0,w.keyCode=_.input.charCodeAt(0),(g=u.EventHandlers.keypressEvent.call(s,w,!0,!1,i,S))&&void 0!==g.pos&&g.pos!==x&&c.validPositions[g.pos]&&!0===c.validPositions[g.pos].match.static)b.push(g.pos);else if(!g)break;S++}}t&&p.call(s,e,o.getBuffer.call(s),g?g.forwardPosition:s.caretPos.begin,n||new d.Event("checkval"),n&&("input"===n.type&&s.undoValue!==o.getBuffer.call(s).join("")||"paste"===n.type)),f.skipOptionalPartCharacter=y}function p(e,t,i,a,r){var s=e?e.inputmask:this,u=s.opts,c=s.dependencyLib;if(a&&"function"==typeof u.onBeforeWrite){var f=u.onBeforeWrite.call(s,a,t,i,u);if(f){if(f.refreshFromBuffer){var d=f.refreshFromBuffer;l.refreshFromBuffer.call(s,!0===d?d:d.start,d.end,f.buffer||t),t=o.getBuffer.call(s,!0)}void 0!==i&&(i=void 0!==f.caret?f.caret:i)}}if(void 0!==e&&(e.inputmask._valueSet(t.join("")),void 0===i||void 0!==a&&"blur"===a.type||o.caret.call(s,e,i,void 0,void 0,void 0!==a&&"keydown"===a.type&&(a.keyCode===n.default.DELETE||a.keyCode===n.default.BACKSPACE)),!0===r)){var p=c(e),h=e.inputmask._valueGet();e.inputmask.skipInputEvent=!0,p.trigger("input"),setTimeout((function(){h===o.getBufferTemplate.call(s).join("")?p.trigger("cleared"):!0===l.isComplete.call(s,t)&&p.trigger("complete")}),0)}}},2394:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,i(7149),i(3194);var a=i(157),n=m(i(4963)),r=m(i(9380)),o=i(2391),l=i(4713),s=i(8711),u=i(7215),c=i(7760),f=i(9716),d=m(i(7392)),p=m(i(3976)),h=m(i(8741));function v(e){return v="function"==typeof Symbol&&"symbol"==_typeof(Symbol.iterator)?function(e){return _typeof(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":_typeof(e)},v(e)}function m(e){return e&&e.__esModule?e:{default:e}}var g=r.default.document,y="_inputmask_opts";function b(e,t,i){if(h.default){if(!(this instanceof b))return new b(e,t,i);this.dependencyLib=n.default,this.el=void 0,this.events={},this.maskset=void 0,!0!==i&&("[object Object]"===Object.prototype.toString.call(e)?t=e:(t=t||{},e&&(t.alias=e)),this.opts=n.default.extend(!0,{},this.defaults,t),this.noMasksCache=t&&void 0!==t.definitions,this.userOptions=t||{},k(this.opts.alias,t,this.opts)),this.refreshValue=!1,this.undoValue=void 0,this.$el=void 0,this.skipKeyPressEvent=!1,this.skipInputEvent=!1,this.validationEvent=!1,this.ignorable=!1,this.maxLength,this.mouseEnter=!1,this.originalPlaceholder=void 0,this.isComposing=!1}}function k(e,t,i){var a=b.prototype.aliases[e];return a?(a.alias&&k(a.alias,void 0,i),n.default.extend(!0,i,a),n.default.extend(!0,i,t),!0):(null===i.mask&&(i.mask=e),!1)}b.prototype={dataAttribute:"data-inputmask",defaults:p.default,definitions:d.default,aliases:{},masksCache:{},get isRTL(){return this.opts.isRTL||this.opts.numericInput},mask:function(e){var t=this;return"string"==typeof e&&(e=g.getElementById(e)||g.querySelectorAll(e)),(e=e.nodeName?[e]:Array.isArray(e)?e:Array.from(e)).forEach((function(e,i){var l=n.default.extend(!0,{},t.opts);if(function(e,t,i,a){function o(t,n){var o=""===a?t:a+"-"+t;null!==(n=void 0!==n?n:e.getAttribute(o))&&("string"==typeof n&&(0===t.indexOf("on")?n=r.default[n]:"false"===n?n=!1:"true"===n&&(n=!0)),i[t]=n)}if(!0===t.importDataAttributes){var l,s,u,c,f=e.getAttribute(a);if(f&&""!==f&&(f=f.replace(/'/g,'"'),s=JSON.parse("{"+f+"}")),s)for(c in u=void 0,s)if("alias"===c.toLowerCase()){u=s[c];break}for(l in o("alias",u),i.alias&&k(i.alias,i,t),t){if(s)for(c in u=void 0,s)if(c.toLowerCase()===l.toLowerCase()){u=s[c];break}o(l,u)}}return n.default.extend(!0,t,i),("rtl"===e.dir||t.rightAlign)&&(e.style.textAlign="right"),("rtl"===e.dir||t.numericInput)&&(e.dir="ltr",e.removeAttribute("dir"),t.isRTL=!0),Object.keys(i).length}(e,l,n.default.extend(!0,{},t.userOptions),t.dataAttribute)){var s=(0,o.generateMaskSet)(l,t.noMasksCache);void 0!==s&&(void 0!==e.inputmask&&(e.inputmask.opts.autoUnmask=!0,e.inputmask.remove()),e.inputmask=new b(void 0,void 0,!0),e.inputmask.opts=l,e.inputmask.noMasksCache=t.noMasksCache,e.inputmask.userOptions=n.default.extend(!0,{},t.userOptions),e.inputmask.el=e,e.inputmask.$el=(0,n.default)(e),e.inputmask.maskset=s,n.default.data(e,y,t.userOptions),a.mask.call(e.inputmask))}})),e&&e[0]&&e[0].inputmask||this},option:function(e,t){return"string"==typeof e?this.opts[e]:"object"===v(e)?(n.default.extend(this.userOptions,e),this.el&&!0!==t&&this.mask(this.el),this):void 0},unmaskedvalue:function(e){if(this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),void 0===this.el||void 0!==e){var t=("function"==typeof this.opts.onBeforeMask&&this.opts.onBeforeMask.call(this,e,this.opts)||e).split("");c.checkVal.call(this,void 0,!1,!1,t),"function"==typeof this.opts.onBeforeWrite&&this.opts.onBeforeWrite.call(this,void 0,s.getBuffer.call(this),0,this.opts)}return c.unmaskedvalue.call(this,this.el)},remove:function(){if(this.el){n.default.data(this.el,y,null);var e=this.opts.autoUnmask?(0,c.unmaskedvalue)(this.el):this._valueGet(this.opts.autoUnmask);e!==s.getBufferTemplate.call(this).join("")?this._valueSet(e,this.opts.autoUnmask):this._valueSet(""),f.EventRuler.off(this.el),Object.getOwnPropertyDescriptor&&Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.el),"value")&&this.__valueGet&&Object.defineProperty(this.el,"value",{get:this.__valueGet,set:this.__valueSet,configurable:!0}):g.__lookupGetter__&&this.el.__lookupGetter__("value")&&this.__valueGet&&(this.el.__defineGetter__("value",this.__valueGet),this.el.__defineSetter__("value",this.__valueSet)),this.el.inputmask=void 0}return this.el},getemptymask:function(){return this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),s.getBufferTemplate.call(this).join("")},hasMaskedValue:function(){return!this.opts.autoUnmask},isComplete:function(){return this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),u.isComplete.call(this,s.getBuffer.call(this))},getmetadata:function(){if(this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),Array.isArray(this.maskset.metadata)){var e=l.getMaskTemplate.call(this,!0,0,!1).join("");return this.maskset.metadata.forEach((function(t){return t.mask!==e||(e=t,!1)})),e}return this.maskset.metadata},isValid:function(e){if(this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache),e){var t=("function"==typeof this.opts.onBeforeMask&&this.opts.onBeforeMask.call(this,e,this.opts)||e).split("");c.checkVal.call(this,void 0,!0,!1,t)}else e=this.isRTL?s.getBuffer.call(this).slice().reverse().join(""):s.getBuffer.call(this).join("");for(var i=s.getBuffer.call(this),a=s.determineLastRequiredPosition.call(this),n=i.length-1;n>a&&!s.isMask.call(this,n);n--);return i.splice(a,n+1-a),u.isComplete.call(this,i)&&e===(this.isRTL?s.getBuffer.call(this).slice().reverse().join(""):s.getBuffer.call(this).join(""))},format:function(e,t){this.maskset=this.maskset||(0,o.generateMaskSet)(this.opts,this.noMasksCache);var i=("function"==typeof this.opts.onBeforeMask&&this.opts.onBeforeMask.call(this,e,this.opts)||e).split("");c.checkVal.call(this,void 0,!0,!1,i);var a=this.isRTL?s.getBuffer.call(this).slice().reverse().join(""):s.getBuffer.call(this).join("");return t?{value:a,metadata:this.getmetadata()}:a},setValue:function(e){this.el&&(0,n.default)(this.el).trigger("setvalue",[e])},analyseMask:o.analyseMask},b.extendDefaults=function(e){n.default.extend(!0,b.prototype.defaults,e)},b.extendDefinitions=function(e){n.default.extend(!0,b.prototype.definitions,e)},b.extendAliases=function(e){n.default.extend(!0,b.prototype.aliases,e)},b.format=function(e,t,i){return b(t).format(e,i)},b.unmask=function(e,t){return b(t).unmaskedvalue(e)},b.isValid=function(e,t){return b(t).isValid(e)},b.remove=function(e){"string"==typeof e&&(e=g.getElementById(e)||g.querySelectorAll(e)),(e=e.nodeName?[e]:e).forEach((function(e){e.inputmask&&e.inputmask.remove()}))},b.setValue=function(e,t){"string"==typeof e&&(e=g.getElementById(e)||g.querySelectorAll(e)),(e=e.nodeName?[e]:e).forEach((function(e){e.inputmask?e.inputmask.setValue(t):(0,n.default)(e).trigger("setvalue",[t])}))},b.dependencyLib=n.default,r.default.Inputmask=b;var x=b;t.default=x},5296:function(e,t,i){function a(e){return a="function"==typeof Symbol&&"symbol"==_typeof(Symbol.iterator)?function(e){return _typeof(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":_typeof(e)},a(e)}var n=p(i(9380)),r=p(i(2394)),o=p(i(8741));function l(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function s(e){var t="function"==typeof Map?new Map:void 0;return s=function(e){if(null===e||(i=e,-1===Function.toString.call(i).indexOf("[native code]")))return e;var i;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,a)}function a(){return u(e,arguments,d(this).constructor)}return a.prototype=Object.create(e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),f(a,e)},s(e)}function u(e,t,i){return u=c()?Reflect.construct:function(e,t,i){var a=[null];a.push.apply(a,t);var n=new(Function.bind.apply(e,a));return i&&f(n,i.prototype),n},u.apply(null,arguments)}function c(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function f(e,t){return f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},f(e,t)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}function p(e){return e&&e.__esModule?e:{default:e}}var h=n.default.document;if(o.default&&h&&h.head&&h.head.attachShadow&&n.default.customElements&&void 0===n.default.customElements.get("input-mask")){var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");Object.defineProperty(e,"prototype",{value:Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),writable:!1}),t&&f(e,t)}(o,e);var t,i,a,n=(t=o,i=c(),function(){var e,a=d(t);if(i){var n=d(this).constructor;e=Reflect.construct(a,arguments,n)}else e=a.apply(this,arguments);return l(this,e)});function o(){var e;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o);var t=(e=n.call(this)).getAttributeNames(),i=e.attachShadow({mode:"closed"}),a=h.createElement("input");for(var l in a.type="text",i.appendChild(a),t)Object.prototype.hasOwnProperty.call(t,l)&&a.setAttribute(t[l],e.getAttribute(t[l]));var s=new r.default;return s.dataAttribute="",s.mask(a),a.inputmask.shadowRoot=i,e}return a=o,Object.defineProperty(a,"prototype",{writable:!1}),a}(s(HTMLElement));n.default.customElements.define("input-mask",v)}},2391:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.analyseMask=function(e,t,i){var a,o,l,s,u,c,f=/(?:[?*+]|\{[0-9+*]+(?:,[0-9+*]*)?(?:\|[0-9+*]*)?\})|[^.?*+^${[]()|\\]+|./g,d=/\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,p=!1,h=new n.default,v=[],m=[],g=!1;function y(e,a,n){n=void 0!==n?n:e.matches.length;var o=e.matches[n-1];if(t)0===a.indexOf("[")||p&&/\\d|\\s|\\w/i.test(a)||"."===a?e.matches.splice(n++,0,{fn:new RegExp(a,i.casing?"i":""),static:!1,optionality:!1,newBlockMarker:void 0===o?"master":o.def!==a,casing:null,def:a,placeholder:void 0,nativeDef:a}):(p&&(a=a[a.length-1]),a.split("").forEach((function(t,a){o=e.matches[n-1],e.matches.splice(n++,0,{fn:/[a-z]/i.test(i.staticDefinitionSymbol||t)?new RegExp("["+(i.staticDefinitionSymbol||t)+"]",i.casing?"i":""):null,static:!0,optionality:!1,newBlockMarker:void 0===o?"master":o.def!==t&&!0!==o.static,casing:null,def:i.staticDefinitionSymbol||t,placeholder:void 0!==i.staticDefinitionSymbol?t:void 0,nativeDef:(p?"'":"")+t})}))),p=!1;else{var l=i.definitions&&i.definitions[a]||i.usePrototypeDefinitions&&r.default.prototype.definitions[a];l&&!p?e.matches.splice(n++,0,{fn:l.validator?"string"==typeof l.validator?new RegExp(l.validator,i.casing?"i":""):new function(){this.test=l.validator}:new RegExp("."),static:l.static||!1,optionality:l.optional||!1,newBlockMarker:void 0===o||l.optional?"master":o.def!==(l.definitionSymbol||a),casing:l.casing,def:l.definitionSymbol||a,placeholder:l.placeholder,nativeDef:a,generated:l.generated}):(e.matches.splice(n++,0,{fn:/[a-z]/i.test(i.staticDefinitionSymbol||a)?new RegExp("["+(i.staticDefinitionSymbol||a)+"]",i.casing?"i":""):null,static:!0,optionality:!1,newBlockMarker:void 0===o?"master":o.def!==a&&!0!==o.static,casing:null,def:i.staticDefinitionSymbol||a,placeholder:void 0!==i.staticDefinitionSymbol?a:void 0,nativeDef:(p?"'":"")+a}),p=!1)}}function b(){if(v.length>0){if(y(s=v[v.length-1],o),s.isAlternator){u=v.pop();for(var e=0;e<u.matches.length;e++)u.matches[e].isGroup&&(u.matches[e].isGroup=!1);v.length>0?(s=v[v.length-1]).matches.push(u):h.matches.push(u)}}else y(h,o)}function k(e){var t=new n.default(!0);return t.openGroup=!1,t.matches=e,t}function x(){if((l=v.pop()).openGroup=!1,void 0!==l)if(v.length>0){if((s=v[v.length-1]).matches.push(l),s.isAlternator){u=v.pop();for(var e=0;e<u.matches.length;e++)u.matches[e].isGroup=!1,u.matches[e].alternatorGroup=!1;v.length>0?(s=v[v.length-1]).matches.push(u):h.matches.push(u)}}else h.matches.push(l);else b()}function _(e){var t=e.pop();return t.isQuantifier&&(t=k([e.pop(),t])),t}for(t&&(i.optionalmarker[0]=void 0,i.optionalmarker[1]=void 0);a=t?d.exec(e):f.exec(e);){if(o=a[0],t){switch(o.charAt(0)){case"?":o="{0,1}";break;case"+":case"*":o="{"+o+"}";break;case"|":if(0===v.length){var E=k(h.matches);E.openGroup=!0,v.push(E),h.matches=[],g=!0}}"\\d"===o&&(o="[0-9]")}if(p)b();else switch(o.charAt(0)){case"$":case"^":t||b();break;case i.escapeChar:p=!0,t&&b();break;case i.optionalmarker[1]:case i.groupmarker[1]:x();break;case i.optionalmarker[0]:v.push(new n.default(!1,!0));break;case i.groupmarker[0]:v.push(new n.default(!0));break;case i.quantifiermarker[0]:var S=new n.default(!1,!1,!0),w=(o=o.replace(/[{}?]/g,"")).split("|"),P=w[0].split(","),C=isNaN(P[0])?P[0]:parseInt(P[0]),F=1===P.length?C:isNaN(P[1])?P[1]:parseInt(P[1]),M=isNaN(w[1])?w[1]:parseInt(w[1]);"*"!==C&&"+"!==C||(C="*"===F?0:1),S.quantifier={min:C,max:F,jit:M};var T=v.length>0?v[v.length-1].matches:h.matches;if((a=T.pop()).isAlternator){T.push(a),T=a.matches;var O=new n.default(!0),A=T.pop();T.push(O),T=O.matches,a=A}a.isGroup||(a=k([a])),T.push(a),T.push(S);break;case i.alternatormarker:if(v.length>0){var L=(s=v[v.length-1]).matches[s.matches.length-1];c=s.openGroup&&(void 0===L.matches||!1===L.isGroup&&!1===L.isAlternator)?v.pop():_(s.matches)}else c=_(h.matches);if(c.isAlternator)v.push(c);else if(c.alternatorGroup?(u=v.pop(),c.alternatorGroup=!1):u=new n.default(!1,!1,!1,!0),u.matches.push(c),v.push(u),c.openGroup){c.openGroup=!1;var j=new n.default(!0);j.alternatorGroup=!0,v.push(j)}break;default:b()}}for(g&&x();v.length>0;)l=v.pop(),h.matches.push(l);return h.matches.length>0&&(function e(a){a&&a.matches&&a.matches.forEach((function(n,r){var o=a.matches[r+1];(void 0===o||void 0===o.matches||!1===o.isQuantifier)&&n&&n.isGroup&&(n.isGroup=!1,t||(y(n,i.groupmarker[0],0),!0!==n.openGroup&&y(n,i.groupmarker[1]))),e(n)}))}(h),m.push(h)),(i.numericInput||i.isRTL)&&function e(t){for(var a in t.matches=t.matches.reverse(),t.matches)if(Object.prototype.hasOwnProperty.call(t.matches,a)){var n=parseInt(a);if(t.matches[a].isQuantifier&&t.matches[n+1]&&t.matches[n+1].isGroup){var r=t.matches[a];t.matches.splice(a,1),t.matches.splice(n+1,0,r)}void 0!==t.matches[a].matches?t.matches[a]=e(t.matches[a]):t.matches[a]=((o=t.matches[a])===i.optionalmarker[0]?o=i.optionalmarker[1]:o===i.optionalmarker[1]?o=i.optionalmarker[0]:o===i.groupmarker[0]?o=i.groupmarker[1]:o===i.groupmarker[1]&&(o=i.groupmarker[0]),o)}var o;return t}(m[0]),m},t.generateMaskSet=function(e,t){function i(e,i,n){var o,l,s=!1;if(null!==e&&""!==e||((s=null!==n.regex)?e=(e=n.regex).replace(/^(\^)(.*)(\$)$/,"$2"):(s=!0,e=".*")),1===e.length&&!1===n.greedy&&0!==n.repeat&&(n.placeholder=""),n.repeat>0||"*"===n.repeat||"+"===n.repeat){var u="*"===n.repeat?0:"+"===n.repeat?1:n.repeat;e=n.groupmarker[0]+e+n.groupmarker[1]+n.quantifiermarker[0]+u+","+n.repeat+n.quantifiermarker[1]}return l=s?"regex_"+n.regex:n.numericInput?e.split("").reverse().join(""):e,!1!==n.keepStatic&&(l="ks_"+l),void 0===r.default.prototype.masksCache[l]||!0===t?(o={mask:e,maskToken:r.default.prototype.analyseMask(e,s,n),validPositions:{},_buffer:void 0,buffer:void 0,tests:{},excludes:{},metadata:i,maskLength:void 0,jitOffset:{}},!0!==t&&(r.default.prototype.masksCache[l]=o,o=a.default.extend(!0,{},r.default.prototype.masksCache[l]))):o=a.default.extend(!0,{},r.default.prototype.masksCache[l]),o}if("function"==typeof e.mask&&(e.mask=e.mask(e)),Array.isArray(e.mask)){if(e.mask.length>1){null===e.keepStatic&&(e.keepStatic=!0);var n=e.groupmarker[0];return(e.isRTL?e.mask.reverse():e.mask).forEach((function(t){n.length>1&&(n+=e.groupmarker[1]+e.alternatormarker+e.groupmarker[0]),void 0!==t.mask&&"function"!=typeof t.mask?n+=t.mask:n+=t})),i(n+=e.groupmarker[1],e.mask,e)}e.mask=e.mask.pop()}return null===e.keepStatic&&(e.keepStatic=!1),e.mask&&void 0!==e.mask.mask&&"function"!=typeof e.mask.mask?i(e.mask.mask,e.mask,e):i(e.mask,e.mask,e)};var a=o(i(4963)),n=o(i(9695)),r=o(i(2394));function o(e){return e&&e.__esModule?e:{default:e}}},157:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.mask=function(){var e=this,t=this.opts,i=this.el,a=this.dependencyLib;l.EventRuler.off(i);var f=function(t,i){"textarea"!==t.tagName.toLowerCase()&&i.ignorables.push(n.default.ENTER);var s=t.getAttribute("type"),u="input"===t.tagName.toLowerCase()&&i.supportsInputType.includes(s)||t.isContentEditable||"textarea"===t.tagName.toLowerCase();if(!u)if("input"===t.tagName.toLowerCase()){var c=document.createElement("input");c.setAttribute("type",s),u="text"===c.type,c=null}else u="partial";return!1!==u?function(t){var n,s;function u(){return this.inputmask?this.inputmask.opts.autoUnmask?this.inputmask.unmaskedvalue():-1!==r.getLastValidPosition.call(e)||!0!==i.nullable?(this.inputmask.shadowRoot||this.ownerDocument).activeElement===this&&i.clearMaskOnLostFocus?(e.isRTL?o.clearOptionalTail.call(e,r.getBuffer.call(e).slice()).reverse():o.clearOptionalTail.call(e,r.getBuffer.call(e).slice())).join(""):n.call(this):"":n.call(this)}function c(e){s.call(this,e),this.inputmask&&(0,o.applyInputValue)(this,e)}if(!t.inputmask.__valueGet){if(!0!==i.noValuePatching){if(Object.getOwnPropertyDescriptor){var f=Object.getPrototypeOf?Object.getOwnPropertyDescriptor(Object.getPrototypeOf(t),"value"):void 0;f&&f.get&&f.set?(n=f.get,s=f.set,Object.defineProperty(t,"value",{get:u,set:c,configurable:!0})):"input"!==t.tagName.toLowerCase()&&(n=function(){return this.textContent},s=function(e){this.textContent=e},Object.defineProperty(t,"value",{get:u,set:c,configurable:!0}))}else document.__lookupGetter__&&t.__lookupGetter__("value")&&(n=t.__lookupGetter__("value"),s=t.__lookupSetter__("value"),t.__defineGetter__("value",u),t.__defineSetter__("value",c));t.inputmask.__valueGet=n,t.inputmask.__valueSet=s}t.inputmask._valueGet=function(t){return e.isRTL&&!0!==t?n.call(this.el).split("").reverse().join(""):n.call(this.el)},t.inputmask._valueSet=function(t,i){s.call(this.el,null==t?"":!0!==i&&e.isRTL?t.split("").reverse().join(""):t)},void 0===n&&(n=function(){return this.value},s=function(e){this.value=e},function(t){if(a.valHooks&&(void 0===a.valHooks[t]||!0!==a.valHooks[t].inputmaskpatch)){var n=a.valHooks[t]&&a.valHooks[t].get?a.valHooks[t].get:function(e){return e.value},l=a.valHooks[t]&&a.valHooks[t].set?a.valHooks[t].set:function(e,t){return e.value=t,e};a.valHooks[t]={get:function(t){if(t.inputmask){if(t.inputmask.opts.autoUnmask)return t.inputmask.unmaskedvalue();var a=n(t);return-1!==r.getLastValidPosition.call(e,void 0,void 0,t.inputmask.maskset.validPositions)||!0!==i.nullable?a:""}return n(t)},set:function(e,t){var i=l(e,t);return e.inputmask&&(0,o.applyInputValue)(e,t),i},inputmaskpatch:!0}}}(t.type),function(t){l.EventRuler.on(t,"mouseenter",(function(){var t=this.inputmask._valueGet(!0);t!==(e.isRTL?r.getBuffer.call(e).reverse():r.getBuffer.call(e)).join("")&&(0,o.applyInputValue)(this,t)}))}(t))}}(t):t.inputmask=void 0,u}(i,t);if(!1!==f){e.originalPlaceholder=i.placeholder,e.maxLength=void 0!==i?i.maxLength:void 0,-1===e.maxLength&&(e.maxLength=void 0),"inputMode"in i&&null===i.getAttribute("inputmode")&&(i.inputMode=t.inputmode,i.setAttribute("inputmode",t.inputmode)),!0===f&&(t.showMaskOnFocus=t.showMaskOnFocus&&-1===["cc-number","cc-exp"].indexOf(i.autocomplete),s.iphone&&(t.insertModeVisual=!1),l.EventRuler.on(i,"submit",c.EventHandlers.submitEvent),l.EventRuler.on(i,"reset",c.EventHandlers.resetEvent),l.EventRuler.on(i,"blur",c.EventHandlers.blurEvent),l.EventRuler.on(i,"focus",c.EventHandlers.focusEvent),l.EventRuler.on(i,"invalid",c.EventHandlers.invalidEvent),l.EventRuler.on(i,"click",c.EventHandlers.clickEvent),l.EventRuler.on(i,"mouseleave",c.EventHandlers.mouseleaveEvent),l.EventRuler.on(i,"mouseenter",c.EventHandlers.mouseenterEvent),l.EventRuler.on(i,"paste",c.EventHandlers.pasteEvent),l.EventRuler.on(i,"cut",c.EventHandlers.cutEvent),l.EventRuler.on(i,"complete",t.oncomplete),l.EventRuler.on(i,"incomplete",t.onincomplete),l.EventRuler.on(i,"cleared",t.oncleared),!0!==t.inputEventOnly&&(l.EventRuler.on(i,"keydown",c.EventHandlers.keydownEvent),l.EventRuler.on(i,"keypress",c.EventHandlers.keypressEvent),l.EventRuler.on(i,"keyup",c.EventHandlers.keyupEvent)),(s.mobile||t.inputEventOnly)&&i.removeAttribute("maxLength"),l.EventRuler.on(i,"input",c.EventHandlers.inputFallBackEvent),l.EventRuler.on(i,"compositionend",c.EventHandlers.compositionendEvent)),l.EventRuler.on(i,"setvalue",c.EventHandlers.setValueEvent),r.getBufferTemplate.call(e).join(""),e.undoValue=e._valueGet(!0);var d=(i.inputmask.shadowRoot||i.ownerDocument).activeElement;if(""!==i.inputmask._valueGet(!0)||!1===t.clearMaskOnLostFocus||d===i){(0,o.applyInputValue)(i,i.inputmask._valueGet(!0),t);var p=r.getBuffer.call(e).slice();!1===u.isComplete.call(e,p)&&t.clearIncomplete&&r.resetMaskSet.call(e),t.clearMaskOnLostFocus&&d!==i&&(-1===r.getLastValidPosition.call(e)?p=[]:o.clearOptionalTail.call(e,p)),(!1===t.clearMaskOnLostFocus||t.showMaskOnFocus&&d===i||""!==i.inputmask._valueGet(!0))&&(0,o.writeBuffer)(i,p),d===i&&r.caret.call(e,i,r.seekNext.call(e,r.getLastValidPosition.call(e)))}}};var a,n=(a=i(5581))&&a.__esModule?a:{default:a},r=i(8711),o=i(7760),l=i(9716),s=i(9845),u=i(7215),c=i(6030)},9695:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i,a){this.matches=[],this.openGroup=e||!1,this.alternatorGroup=!1,this.isGroup=e||!1,this.isOptional=t||!1,this.isQuantifier=i||!1,this.isAlternator=a||!1,this.quantifier={min:1,max:1}}},3194:function(){Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(e,t){if(null==this)throw new TypeError('"this" is null or not defined');var i=Object(this),a=i.length>>>0;if(0===a)return!1;for(var n=0|t,r=Math.max(n>=0?n:a-Math.abs(n),0);r<a;){if(i[r]===e)return!0;r++}return!1}})},7149:function(){function e(t){return(e="function"==typeof Symbol&&"symbol"==_typeof(Symbol.iterator)?function(e){return _typeof(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":_typeof(e)})(t)}"function"!=typeof Object.getPrototypeOf&&(Object.getPrototypeOf="object"===e("test".__proto__)?function(e){return e.__proto__}:function(e){return e.constructor.prototype})},8711:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.caret=function(e,t,i,a,n){var r,o=this,l=this.opts;if(void 0===t)return"selectionStart"in e&&"selectionEnd"in e?(t=e.selectionStart,i=e.selectionEnd):window.getSelection?(r=window.getSelection().getRangeAt(0)).commonAncestorContainer.parentNode!==e&&r.commonAncestorContainer!==e||(t=r.startOffset,i=r.endOffset):document.selection&&document.selection.createRange&&(i=(t=0-(r=document.selection.createRange()).duplicate().moveStart("character",-e.inputmask._valueGet().length))+r.text.length),{begin:a?t:u.call(o,t),end:a?i:u.call(o,i)};if(Array.isArray(t)&&(i=o.isRTL?t[0]:t[1],t=o.isRTL?t[1]:t[0]),void 0!==t.begin&&(i=o.isRTL?t.begin:t.end,t=o.isRTL?t.end:t.begin),"number"==typeof t){t=a?t:u.call(o,t),i="number"==typeof(i=a?i:u.call(o,i))?i:t;var s=parseInt(((e.ownerDocument.defaultView||window).getComputedStyle?(e.ownerDocument.defaultView||window).getComputedStyle(e,null):e.currentStyle).fontSize)*i;if(e.scrollLeft=s>e.scrollWidth?s:0,e.inputmask.caretPos={begin:t,end:i},l.insertModeVisual&&!1===l.insertMode&&t===i&&(n||i++),e===(e.inputmask.shadowRoot||e.ownerDocument).activeElement)if("setSelectionRange"in e)e.setSelectionRange(t,i);else if(window.getSelection){if(r=document.createRange(),void 0===e.firstChild||null===e.firstChild){var c=document.createTextNode("");e.appendChild(c)}r.setStart(e.firstChild,t<e.inputmask._valueGet().length?t:e.inputmask._valueGet().length),r.setEnd(e.firstChild,i<e.inputmask._valueGet().length?i:e.inputmask._valueGet().length),r.collapse(!0);var f=window.getSelection();f.removeAllRanges(),f.addRange(r)}else e.createTextRange&&((r=e.createTextRange()).collapse(!0),r.moveEnd("character",i),r.moveStart("character",t),r.select())}},t.determineLastRequiredPosition=function(e){var t,i,r=this,l=this.maskset,s=this.dependencyLib,u=a.getMaskTemplate.call(r,!0,o.call(r),!0,!0),c=u.length,f=o.call(r),d={},p=l.validPositions[f],h=void 0!==p?p.locator.slice():void 0;for(t=f+1;t<u.length;t++)h=(i=a.getTestTemplate.call(r,t,h,t-1)).locator.slice(),d[t]=s.extend(!0,{},i);var v=p&&void 0!==p.alternation?p.locator[p.alternation]:void 0;for(t=c-1;t>f&&((i=d[t]).match.optionality||i.match.optionalQuantifier&&i.match.newBlockMarker||v&&(v!==d[t].locator[p.alternation]&&1!=i.match.static||!0===i.match.static&&i.locator[p.alternation]&&n.checkAlternationMatch.call(r,i.locator[p.alternation].toString().split(","),v.toString().split(","))&&""!==a.getTests.call(r,t)[0].def))&&u[t]===a.getPlaceholder.call(r,t,i.match);t--)c--;return e?{l:c,def:d[c]?d[c].match:void 0}:c},t.determineNewCaretPosition=function(e,t,i){var n=this,u=this.maskset,c=this.opts;if(t&&(n.isRTL?e.end=e.begin:e.begin=e.end),e.begin===e.end){switch(i=i||c.positionCaretOnClick){case"none":break;case"select":e={begin:0,end:r.call(n).length};break;case"ignore":e.end=e.begin=s.call(n,o.call(n));break;case"radixFocus":if(function(e){if(""!==c.radixPoint&&0!==c.digits){var t=u.validPositions;if(void 0===t[e]||t[e].input===a.getPlaceholder.call(n,e)){if(e<s.call(n,-1))return!0;var i=r.call(n).indexOf(c.radixPoint);if(-1!==i){for(var o in t)if(t[o]&&i<o&&t[o].input!==a.getPlaceholder.call(n,o))return!1;return!0}}}return!1}(e.begin)){var f=r.call(n).join("").indexOf(c.radixPoint);e.end=e.begin=c.numericInput?s.call(n,f):f;break}default:var d=e.begin,p=o.call(n,d,!0),h=s.call(n,-1!==p||l.call(n,0)?p:-1);if(d<=h)e.end=e.begin=l.call(n,d,!1,!0)?d:s.call(n,d);else{var v=u.validPositions[p],m=a.getTestTemplate.call(n,h,v?v.match.locator:void 0,v),g=a.getPlaceholder.call(n,h,m.match);if(""!==g&&r.call(n)[h]!==g&&!0!==m.match.optionalQuantifier&&!0!==m.match.newBlockMarker||!l.call(n,h,c.keepStatic,!0)&&m.match.def===g){var y=s.call(n,h);(d>=y||d===h)&&(h=y)}e.end=e.begin=h}}return e}},t.getBuffer=r,t.getBufferTemplate=function(){var e=this.maskset;return void 0===e._buffer&&(e._buffer=a.getMaskTemplate.call(this,!1,1),void 0===e.buffer&&(e.buffer=e._buffer.slice())),e._buffer},t.getLastValidPosition=o,t.isMask=l,t.resetMaskSet=function(e){var t=this.maskset;t.buffer=void 0,!0!==e&&(t.validPositions={},t.p=0)},t.seekNext=s,t.seekPrevious=function(e,t){var i=this,n=e-1;if(e<=0)return 0;for(;n>0&&(!0===t&&(!0!==a.getTest.call(i,n).match.newBlockMarker||!l.call(i,n,void 0,!0))||!0!==t&&!l.call(i,n,void 0,!0));)n--;return n},t.translatePosition=u;var a=i(4713),n=i(7215);function r(e){var t=this.maskset;return void 0!==t.buffer&&!0!==e||(t.buffer=a.getMaskTemplate.call(this,!0,o.call(this),!0),void 0===t._buffer&&(t._buffer=t.buffer.slice())),t.buffer}function o(e,t,i){var a=this.maskset,n=-1,r=-1,o=i||a.validPositions;for(var l in void 0===e&&(e=-1),o){var s=parseInt(l);o[s]&&(t||!0!==o[s].generatedInput)&&(s<=e&&(n=s),s>=e&&(r=s))}return-1===n||n==e?r:-1==r||e-n<r-e?n:r}function l(e,t,i){var n=this,r=this.maskset,o=a.getTestTemplate.call(n,e).match;if(""===o.def&&(o=a.getTest.call(n,e).match),!0!==o.static)return o.fn;if(!0===i&&void 0!==r.validPositions[e]&&!0!==r.validPositions[e].generatedInput)return!0;if(!0!==t&&e>-1){if(i){var l=a.getTests.call(n,e);return l.length>1+(""===l[l.length-1].match.def?1:0)}var s=a.determineTestTemplate.call(n,e,a.getTests.call(n,e)),u=a.getPlaceholder.call(n,e,s.match);return s.match.def!==u}return!1}function s(e,t,i){var n=this;void 0===i&&(i=!0);for(var r=e+1;""!==a.getTest.call(n,r).match.def&&(!0===t&&(!0!==a.getTest.call(n,r).match.newBlockMarker||!l.call(n,r,void 0,!0))||!0!==t&&!l.call(n,r,void 0,i));)r++;return r}function u(e){var t=this.opts,i=this.el;return!this.isRTL||"number"!=typeof e||t.greedy&&""===t.placeholder||!i||(e=Math.abs(this._valueGet().length-e)),e}},4713:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.determineTestTemplate=u,t.getDecisionTaker=o,t.getMaskTemplate=function(e,t,i,a,n){var r=this,o=this.opts,c=this.maskset,f=o.greedy;n&&o.greedy&&(o.greedy=!1,r.maskset.tests={}),t=t||0;var p,h,v,m,g=[],y=0;do{if(!0===e&&c.validPositions[y])h=(v=n&&c.validPositions[y].match.optionality&&void 0===c.validPositions[y+1]&&(!0===c.validPositions[y].generatedInput||c.validPositions[y].input==o.skipOptionalPartCharacter&&y>0)?u.call(r,y,d.call(r,y,p,y-1)):c.validPositions[y]).match,p=v.locator.slice(),g.push(!0===i?v.input:!1===i?h.nativeDef:l.call(r,y,h));else{h=(v=s.call(r,y,p,y-1)).match,p=v.locator.slice();var b=!0!==a&&(!1!==o.jitMasking?o.jitMasking:h.jit);(m=(m&&h.static&&h.def!==o.groupSeparator&&null===h.fn||c.validPositions[y-1]&&h.static&&h.def!==o.groupSeparator&&null===h.fn)&&c.tests[y]&&1===c.tests[y].length)||!1===b||void 0===b||"number"==typeof b&&isFinite(b)&&b>y?g.push(!1===i?h.nativeDef:l.call(r,y,h)):m=!1}y++}while(!0!==h.static||""!==h.def||t>y);return""===g[g.length-1]&&g.pop(),!1===i&&void 0!==c.maskLength||(c.maskLength=y-1),o.greedy=f,g},t.getPlaceholder=l,t.getTest=c,t.getTestTemplate=s,t.getTests=d,t.isSubsetOf=f;var a,n=(a=i(2394))&&a.__esModule?a:{default:a};function r(e,t){var i=(null!=e.alternation?e.mloc[o(e)]:e.locator).join("");if(""!==i)for(;i.length<t;)i+="0";return i}function o(e){var t=e.locator[e.alternation];return"string"==typeof t&&t.length>0&&(t=t.split(",")[0]),void 0!==t?t.toString():""}function l(e,t,i){var a=this.opts,n=this.maskset;if(void 0!==(t=t||c.call(this,e).match).placeholder||!0===i)return"function"==typeof t.placeholder?t.placeholder(a):t.placeholder;if(!0===t.static){if(e>-1&&void 0===n.validPositions[e]){var r,o=d.call(this,e),l=[];if(o.length>1+(""===o[o.length-1].match.def?1:0))for(var s=0;s<o.length;s++)if(""!==o[s].match.def&&!0!==o[s].match.optionality&&!0!==o[s].match.optionalQuantifier&&(!0===o[s].match.static||void 0===r||!1!==o[s].match.fn.test(r.match.def,n,e,!0,a))&&(l.push(o[s]),!0===o[s].match.static&&(r=o[s]),l.length>1&&/[0-9a-bA-Z]/.test(l[0].match.def)))return a.placeholder.charAt(e%a.placeholder.length)}return t.def}return a.placeholder.charAt(e%a.placeholder.length)}function s(e,t,i){return this.maskset.validPositions[e]||u.call(this,e,d.call(this,e,t?t.slice():t,i))}function u(e,t){var i=this.opts,a=function(e,t){var i=0,a=!1;return t.forEach((function(e){e.match.optionality&&(0!==i&&i!==e.match.optionality&&(a=!0),(0===i||i>e.match.optionality)&&(i=e.match.optionality))})),i&&(0==e||1==t.length?i=0:a||(i=0)),i}(e,t);e=e>0?e-1:0;var n,o,l,s=r(c.call(this,e));i.greedy&&t.length>1&&""===t[t.length-1].match.def&&t.pop();for(var u=0;u<t.length;u++){var f=t[u];n=r(f,s.length);var d=Math.abs(n-s);(void 0===o||""!==n&&d<o||l&&!i.greedy&&l.match.optionality&&l.match.optionality-a>0&&"master"===l.match.newBlockMarker&&(!f.match.optionality||f.match.optionality-a<1||!f.match.newBlockMarker)||l&&!i.greedy&&l.match.optionalQuantifier&&!f.match.optionalQuantifier)&&(o=d,l=f)}return l}function c(e,t){var i=this.maskset;return i.validPositions[e]?i.validPositions[e]:(t||d.call(this,e))[0]}function f(e,t,i){function a(e){for(var t,i=[],a=-1,n=0,r=e.length;n<r;n++)if("-"===e.charAt(n))for(t=e.charCodeAt(n+1);++a<t;)i.push(String.fromCharCode(a));else a=e.charCodeAt(n),i.push(e.charAt(n));return i.join("")}return e.match.def===t.match.nativeDef||!(!(i.regex||e.match.fn instanceof RegExp&&t.match.fn instanceof RegExp)||!0===e.match.static||!0===t.match.static)&&-1!==a(t.match.fn.toString().replace(/[[\]/]/g,"")).indexOf(a(e.match.fn.toString().replace(/[[\]/]/g,"")))}function d(e,t,i){var a,r,o=this,l=this.dependencyLib,s=this.maskset,c=this.opts,d=this.el,p=s.maskToken,h=t?i:0,v=t?t.slice():[0],m=[],g=!1,y=t?t.join(""):"";function b(t,i,r,o){function l(r,o,u){function p(e,t){var i=0===t.matches.indexOf(e);return i||t.matches.every((function(a,n){return!0===a.isQuantifier?i=p(e,t.matches[n-1]):Object.prototype.hasOwnProperty.call(a,"matches")&&(i=p(e,a)),!i})),i}function v(e,t,i){var a,n;if((s.tests[e]||s.validPositions[e])&&(s.tests[e]||[s.validPositions[e]]).every((function(e,r){if(e.mloc[t])return a=e,!1;var o=void 0!==i?i:e.alternation,l=void 0!==e.locator[o]?e.locator[o].toString().indexOf(t):-1;return(void 0===n||l<n)&&-1!==l&&(a=e,n=l),!0})),a){var r=a.locator[a.alternation];return(a.mloc[t]||a.mloc[r]||a.locator).slice((void 0!==i?i:a.alternation)+1)}return void 0!==i?v(e,t):void 0}function k(e,t){var i=e.alternation,a=void 0===t||i===t.alternation&&-1===e.locator[i].toString().indexOf(t.locator[i]);if(!a&&i>t.alternation)for(var n=t.alternation;n<i;n++)if(e.locator[n]!==t.locator[n]){i=n,a=!0;break}if(a){e.mloc=e.mloc||{};var r=e.locator[i];if(void 0!==r){if("string"==typeof r&&(r=r.split(",")[0]),void 0===e.mloc[r]&&(e.mloc[r]=e.locator.slice()),void 0!==t){for(var o in t.mloc)"string"==typeof o&&(o=o.split(",")[0]),void 0===e.mloc[o]&&(e.mloc[o]=t.mloc[o]);e.locator[i]=Object.keys(e.mloc).join(",")}return!0}e.alternation=void 0}return!1}function x(e,t){if(e.locator.length!==t.locator.length)return!1;for(var i=e.alternation+1;i<e.locator.length;i++)if(e.locator[i]!==t.locator[i])return!1;return!0}if(h>e+c._maxTestPos)throw"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. "+s.mask;if(h===e&&void 0===r.matches){if(m.push({match:r,locator:o.reverse(),cd:y,mloc:{}}),!r.optionality||void 0!==u||!(c.definitions&&c.definitions[r.nativeDef]&&c.definitions[r.nativeDef].optional||n.default.prototype.definitions[r.nativeDef]&&n.default.prototype.definitions[r.nativeDef].optional))return!0;g=!0,h=e}else if(void 0!==r.matches){if(r.isGroup&&u!==r){if(r=l(t.matches[t.matches.indexOf(r)+1],o,u))return!0}else if(r.isOptional){var _=r,E=m.length;if(r=b(r,i,o,u)){if(m.forEach((function(e,t){t>=E&&(e.match.optionality=e.match.optionality?e.match.optionality+1:1)})),a=m[m.length-1].match,void 0!==u||!p(a,_))return!0;g=!0,h=e}}else if(r.isAlternator){var S,w=r,P=[],C=m.slice(),F=o.length,M=!1,T=i.length>0?i.shift():-1;if(-1===T||"string"==typeof T){var O,A=h,L=i.slice(),j=[];if("string"==typeof T)j=T.split(",");else for(O=0;O<w.matches.length;O++)j.push(O.toString());if(void 0!==s.excludes[e]){for(var I=j.slice(),D=0,R=s.excludes[e].length;D<R;D++){var B=s.excludes[e][D].toString().split(":");o.length==B[1]&&j.splice(j.indexOf(B[0]),1)}0===j.length&&(delete s.excludes[e],j=I)}(!0===c.keepStatic||isFinite(parseInt(c.keepStatic))&&A>=c.keepStatic)&&(j=j.slice(0,1));for(var V=0;V<j.length;V++){O=parseInt(j[V]),m=[],i="string"==typeof T&&v(h,O,F)||L.slice();var N=w.matches[O];if(N&&l(N,[O].concat(o),u))r=!0;else if(0===V&&(M=!0),N&&N.matches&&N.matches.length>w.matches[0].matches.length)break;S=m.slice(),h=A,m=[];for(var G=0;G<S.length;G++){var H=S[G],K=!1;H.match.jit=H.match.jit||M,H.alternation=H.alternation||F,k(H);for(var q=0;q<P.length;q++){var U=P[q];if("string"!=typeof T||void 0!==H.alternation&&j.includes(H.locator[H.alternation].toString())){if(H.match.nativeDef===U.match.nativeDef){K=!0,k(U,H);break}if(f(H,U,c)){k(H,U)&&(K=!0,P.splice(P.indexOf(U),0,H));break}if(f(U,H,c)){k(U,H);break}if(Q=U,!0===(Z=H).match.static&&!0!==Q.match.static&&Q.match.fn.test(Z.match.def,s,e,!1,c,!1)){x(H,U)||void 0!==d.inputmask.userOptions.keepStatic?k(H,U)&&(K=!0,P.splice(P.indexOf(U),0,H)):c.keepStatic=!0;break}}}K||P.push(H)}}m=C.concat(P),h=e,g=m.length>0,r=P.length>0,i=L.slice()}else r=l(w.matches[T]||t.matches[T],[T].concat(o),u);if(r)return!0}else if(r.isQuantifier&&u!==t.matches[t.matches.indexOf(r)-1])for(var z=r,$=i.length>0?i.shift():0;$<(isNaN(z.quantifier.max)?$+1:z.quantifier.max)&&h<=e;$++){var W=t.matches[t.matches.indexOf(z)-1];if(r=l(W,[$].concat(o),W)){if((a=m[m.length-1].match).optionalQuantifier=$>=z.quantifier.min,a.jit=($+1)*(W.matches.indexOf(a)+1)>z.quantifier.jit,a.optionalQuantifier&&p(a,W)){g=!0,h=e;break}return a.jit&&(s.jitOffset[e]=W.matches.length-W.matches.indexOf(a)),!0}}else if(r=b(r,i,o,u))return!0}else h++;var Z,Q}for(var u=i.length>0?i.shift():0;u<t.matches.length;u++)if(!0!==t.matches[u].isQuantifier){var p=l(t.matches[u],[u].concat(r),o);if(p&&h===e)return p;if(h>e)break}}if(e>-1){if(void 0===t){for(var k,x=e-1;void 0===(k=s.validPositions[x]||s.tests[x])&&x>-1;)x--;void 0!==k&&x>-1&&(v=function(e,t){var i,a=[];return Array.isArray(t)||(t=[t]),t.length>0&&(void 0===t[0].alternation||!0===c.keepStatic?0===(a=u.call(o,e,t.slice()).locator.slice()).length&&(a=t[0].locator.slice()):t.forEach((function(e){""!==e.def&&(0===a.length?(i=e.alternation,a=e.locator.slice()):e.locator[i]&&-1===a[i].toString().indexOf(e.locator[i])&&(a[i]+=","+e.locator[i]))}))),a}(x,k),y=v.join(""),h=x)}if(s.tests[e]&&s.tests[e][0].cd===y)return s.tests[e];for(var _=v.shift();_<p.length&&!(b(p[_],v,[_])&&h===e||h>e);_++);}return(0===m.length||g)&&m.push({match:{fn:null,static:!0,optionality:!1,casing:null,def:"",placeholder:""},locator:[],mloc:{},cd:y}),void 0!==t&&s.tests[e]?r=l.extend(!0,[],m):(s.tests[e]=l.extend(!0,[],m),r=s.tests[e]),m.forEach((function(e){e.match.optionality=!1})),r}i(8711)},7215:function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.alternate=s,t.checkAlternationMatch=function(e,t,i){for(var a,n=this.opts.greedy?t:t.slice(0,1),r=!1,o=void 0!==i?i.split(","):[],l=0;l<o.length;l++)-1!==(a=e.indexOf(o[l]))&&e.splice(a,1);for(var s=0;s<e.length;s++)if(n.includes(e[s])){r=!0;break}return r},t.handleRemove=function(e,t,i,a,l){var u=this,c=this.maskset,f=this.opts;if((f.numericInput||u.isRTL)&&(t===r.default.BACKSPACE?t=r.default.DELETE:t===r.default.DELETE&&(t=r.default.BACKSPACE),u.isRTL)){var d=i.end;i.end=i.begin,i.begin=d}var p,h=o.getLastValidPosition.call(u,void 0,!0);if(i.end>=o.getBuffer.call(u).length&&h>=i.end&&(i.end=h+1),t===r.default.BACKSPACE?i.end-i.begin<1&&(i.begin=o.seekPrevious.call(u,i.begin)):t===r.default.DELETE&&i.begin===i.end&&(i.end=o.isMask.call(u,i.end,!0,!0)?i.end+1:o.seekNext.call(u,i.end)+1),!1!==(p=m.call(u,i))){if(!0!==a&&!1!==f.keepStatic||null!==f.regex&&-1!==n.getTest.call(u,i.begin).match.def.indexOf("|")){var v=s.call(u,!0);if(v){var g=void 0!==v.caret?v.caret:v.pos?o.seekNext.call(u,v.pos.begin?v.pos.begin:v.pos):o.getLastValidPosition.call(u,-1,!0);(t!==r.default.DELETE||i.begin>g)&&i.begin}}!0!==a&&(c.p=t===r.default.DELETE?i.begin+p:i.begin,c.p=o.determineNewCaretPosition.call(u,{begin:c.p,end:c.p},!1,!1===f.insertMode&&t===r.default.BACKSPACE?"none":void 0).begin)}},t.isComplete=c,t.isSelection=f,t.isValid=d,t.refreshFromBuffer=h,t.revalidateMask=m;var a,n=i(4713),r=(a=i(5581))&&a.__esModule?a:{default:a},o=i(8711),l=i(6030);function s(e,t,i,a,r,l){var u,c,f,p,h,v,m,g,y,b,k,x=this,_=this.dependencyLib,E=this.opts,S=x.maskset,w=_.extend(!0,{},S.validPositions),P=_.extend(!0,{},S.tests),C=!1,F=!1,M=void 0!==r?r:o.getLastValidPosition.call(x);if(l&&(b=l.begin,k=l.end,l.begin>l.end&&(b=l.end,k=l.begin)),-1===M&&void 0===r)u=0,c=(p=n.getTest.call(x,u)).alternation;else for(;M>=0;M--)if((f=S.validPositions[M])&&void 0!==f.alternation){if(p&&p.locator[f.alternation]!==f.locator[f.alternation])break;u=M,c=S.validPositions[u].alternation,p=f}if(void 0!==c){m=parseInt(u),S.excludes[m]=S.excludes[m]||[],!0!==e&&S.excludes[m].push((0,n.getDecisionTaker)(p)+":"+p.alternation);var T=[],O=-1;for(h=m;h<o.getLastValidPosition.call(x,void 0,!0)+1;h++)-1===O&&e<=h&&void 0!==t&&(T.push(t),O=T.length-1),(v=S.validPositions[h])&&!0!==v.generatedInput&&(void 0===l||h<b||h>=k)&&T.push(v.input),delete S.validPositions[h];for(-1===O&&void 0!==t&&(T.push(t),O=T.length-1);void 0!==S.excludes[m]&&S.excludes[m].length<10;){for(S.tests={},o.resetMaskSet.call(x,!0),C=!0,h=0;h<T.length&&(g=C.caret||o.getLastValidPosition.call(x,void 0,!0)+1,y=T[h],C=d.call(x,g,y,!1,a,!0));h++)h===O&&(F=C),1==e&&C&&(F={caretPos:h});if(C)break;if(o.resetMaskSet.call(x),p=n.getTest.call(x,m),S.validPositions=_.extend(!0,{},w),S.tests=_.extend(!0,{},P),!S.excludes[m]){F=s.call(x,e,t,i,a,m-1,l);break}var A=(0,n.getDecisionTaker)(p);if(-1!==S.excludes[m].indexOf(A+":"+p.alternation)){F=s.call(x,e,t,i,a,m-1,l);break}for(S.excludes[m].push(A+":"+p.alternation),h=m;h<o.getLastValidPosition.call(x,void 0,!0)+1;h++)delete S.validPositions[h]}}return F&&!1===E.keepStatic||delete S.excludes[m],F}function u(e,t,i){var a=this.opts,n=this.maskset;switch(a.casing||t.casing){case"upper":e=e.toUpperCase();break;case"lower":e=e.toLowerCase();break;case"title":var o=n.validPositions[i-1];e=0===i||o&&o.input===String.fromCharCode(r.default.SPACE)?e.toUpperCase():e.toLowerCase();break;default:if("function"==typeof a.casing){var l=Array.prototype.slice.call(arguments);l.push(n.validPositions),e=a.casing.apply(this,l)}}return e}function c(e){var t=this,i=this.opts,a=this.maskset;if("function"==typeof i.isComplete)return i.isComplete(e,i);if("*"!==i.repeat){var r=!1,l=o.determineLastRequiredPosition.call(t,!0),s=o.seekPrevious.call(t,l.l);if(void 0===l.def||l.def.newBlockMarker||l.def.optionality||l.def.optionalQuantifier){r=!0;for(var u=0;u<=s;u++){var c=n.getTestTemplate.call(t,u).match;if(!0!==c.static&&void 0===a.validPositions[u]&&!0!==c.optionality&&!0!==c.optionalQuantifier||!0===c.static&&e[u]!==n.getPlaceholder.call(t,u,c)){r=!1;break}}}return r}}function f(e){var t=this.opts.insertMode?0:1;return this.isRTL?e.begin-e.end>t:e.end-e.begin>t}function d(e,t,i,a,r,l,p){var g=this,y=this.dependencyLib,b=this.opts,k=g.maskset;i=!0===i;var x=e;function _(e){if(void 0!==e){if(void 0!==e.remove&&(Array.isArray(e.remove)||(e.remove=[e.remove]),e.remove.sort((function(e,t){return t.pos-e.pos})).forEach((function(e){m.call(g,{begin:e,end:e+1})})),e.remove=void 0),void 0!==e.insert&&(Array.isArray(e.insert)||(e.insert=[e.insert]),e.insert.sort((function(e,t){return e.pos-t.pos})).forEach((function(e){""!==e.c&&d.call(g,e.pos,e.c,void 0===e.strict||e.strict,void 0!==e.fromIsValid?e.fromIsValid:a)})),e.insert=void 0),e.refreshFromBuffer&&e.buffer){var t=e.refreshFromBuffer;h.call(g,!0===t?t:t.start,t.end,e.buffer),e.refreshFromBuffer=void 0}void 0!==e.rewritePosition&&(x=e.rewritePosition,e=!0)}return e}function E(t,i,r){var l=!1;return n.getTests.call(g,t).every((function(s,c){var d=s.match;if(o.getBuffer.call(g,!0),!1!==(l=(!d.jit||void 0!==k.validPositions[o.seekPrevious.call(g,t)])&&(null!=d.fn?d.fn.test(i,k,t,r,b,f.call(g,e)):(i===d.def||i===b.skipOptionalPartCharacter)&&""!==d.def&&{c:n.getPlaceholder.call(g,t,d,!0)||d.def,pos:t}))){var p=void 0!==l.c?l.c:i,h=t;return p=p===b.skipOptionalPartCharacter&&!0===d.static?n.getPlaceholder.call(g,t,d,!0)||d.def:p,!0!==(l=_(l))&&void 0!==l.pos&&l.pos!==t&&(h=l.pos),!0!==l&&void 0===l.pos&&void 0===l.c||!1===m.call(g,e,y.extend({},s,{input:u.call(g,p,d,h)}),a,h)&&(l=!1),!1}return!0})),l}void 0!==e.begin&&(x=g.isRTL?e.end:e.begin);var S=!0,w=y.extend(!0,{},k.validPositions);if(!1===b.keepStatic&&void 0!==k.excludes[x]&&!0!==r&&!0!==a)for(var P=x;P<(g.isRTL?e.begin:e.end);P++)void 0!==k.excludes[P]&&(k.excludes[P]=void 0,delete k.tests[P]);if("function"==typeof b.preValidation&&!0!==a&&!0!==l&&(S=_(S=b.preValidation.call(g,o.getBuffer.call(g),x,t,f.call(g,e),b,k,e,i||r))),!0===S){if(S=E(x,t,i),(!i||!0===a)&&!1===S&&!0!==l){var C=k.validPositions[x];if(!C||!0!==C.match.static||C.match.def!==t&&t!==b.skipOptionalPartCharacter){if(b.insertMode||void 0===k.validPositions[o.seekNext.call(g,x)]||e.end>x){var F=!1;if(k.jitOffset[x]&&void 0===k.validPositions[o.seekNext.call(g,x)]&&!1!==(S=d.call(g,x+k.jitOffset[x],t,!0,!0))&&(!0!==r&&(S.caret=x),F=!0),e.end>x&&(k.validPositions[x]=void 0),!F&&!o.isMask.call(g,x,b.keepStatic&&0===x))for(var M=x+1,T=o.seekNext.call(g,x,!1,0!==x);M<=T;M++)if(!1!==(S=E(M,t,i))){S=v.call(g,x,void 0!==S.pos?S.pos:M)||S,x=M;break}}}else S={caret:o.seekNext.call(g,x)}}!1!==S||!b.keepStatic||!c.call(g,o.getBuffer.call(g))&&0!==x||i||!0===r?f.call(g,e)&&k.tests[x]&&k.tests[x].length>1&&b.keepStatic&&!i&&!0!==r&&(S=s.call(g,!0)):S=s.call(g,x,t,i,a,void 0,e),!0===S&&(S={pos:x})}if("function"==typeof b.postValidation&&!0!==a&&!0!==l){var O=b.postValidation.call(g,o.getBuffer.call(g,!0),void 0!==e.begin?g.isRTL?e.end:e.begin:e,t,S,b,k,i,p);void 0!==O&&(S=!0===O?S:O)}S&&void 0===S.pos&&(S.pos=x),!1===S||!0===l?(o.resetMaskSet.call(g,!0),k.validPositions=y.extend(!0,{},w)):v.call(g,void 0,x,!0);var A=_(S);return void 0!==g.maxLength&&o.getBuffer.call(g).length>g.maxLength&&!a&&(o.resetMaskSet.call(g,!0),k.validPositions=y.extend(!0,{},w),A=!1),A}function p(e,t,i){for(var a=this.maskset,r=!1,o=n.getTests.call(this,e),l=0;l<o.length;l++){if(o[l].match&&(o[l].match.nativeDef===t.match[i.shiftPositions?"def":"nativeDef"]&&(!i.shiftPositions||!t.match.static)||o[l].match.nativeDef===t.match.nativeDef||i.regex&&!o[l].match.static&&o[l].match.fn.test(t.input))){r=!0;break}if(o[l].match&&o[l].match.def===t.match.nativeDef){r=void 0;break}}return!1===r&&void 0!==a.jitOffset[e]&&(r=p.call(this,e+a.jitOffset[e],t,i)),r}function h(e,t,i){var a,n,r=this,s=this.maskset,u=this.opts,c=this.dependencyLib,f=u.skipOptionalPartCharacter,d=r.isRTL?i.slice().reverse():i;if(u.skipOptionalPartCharacter="",!0===e)o.resetMaskSet.call(r),s.tests={},e=0,t=i.length,n=o.determineNewCaretPosition.call(r,{begin:0,end:0},!1).begin;else{for(a=e;a<t;a++)delete s.validPositions[a];n=e}var p=new c.Event("keypress");for(a=e;a<t;a++){p.keyCode=d[a].toString().charCodeAt(0),r.ignorable=!1;var h=l.EventHandlers.keypressEvent.call(r,p,!0,!1,!1,n);!1!==h&&void 0!==h&&(n=h.forwardPosition)}u.skipOptionalPartCharacter=f}function v(e,t,i){var a=this,r=this.maskset,l=this.dependencyLib;if(void 0===e)for(e=t-1;e>0&&!r.validPositions[e];e--);for(var s=e;s<t;s++)if(void 0===r.validPositions[s]&&!o.isMask.call(a,s,!1)&&(0==s?n.getTest.call(a,s):r.validPositions[s-1])){var u=n.getTests.call(a,s).slice();""===u[u.length-1].match.def&&u.pop();var c,f=n.determineTestTemplate.call(a,s,u);if(f&&(!0!==f.match.jit||"master"===f.match.newBlockMarker&&(c=r.validPositions[s+1])&&!0===c.match.optionalQuantifier)&&((f=l.extend({},f,{input:n.getPlaceholder.call(a,s,f.match,!0)||f.match.def})).generatedInput=!0,m.call(a,s,f,!0),!0!==i)){var p=r.validPositions[t].input;return r.validPositions[t]=void 0,d.call(a,t,p,!0,!0)}}}function m(e,t,i,a){var r=this,l=this.maskset,s=this.opts,u=this.dependencyLib;function c(e,t,i){var a=t[e];if(void 0!==a&&!0===a.match.static&&!0!==a.match.optionality&&(void 0===t[0]||void 0===t[0].alternation)){var n=i.begin<=e-1?t[e-1]&&!0===t[e-1].match.static&&t[e-1]:t[e-1],r=i.end>e+1?t[e+1]&&!0===t[e+1].match.static&&t[e+1]:t[e+1];return n&&r}return!1}var f=0,h=void 0!==e.begin?e.begin:e,v=void 0!==e.end?e.end:e,m=!0;if(e.begin>e.end&&(h=e.end,v=e.begin),a=void 0!==a?a:h,h!==v||s.insertMode&&void 0!==l.validPositions[a]&&void 0===i||void 0===t||t.match.optionalQuantifier||t.match.optionality){var g,y=u.extend(!0,{},l.validPositions),b=o.getLastValidPosition.call(r,void 0,!0);for(l.p=h,g=b;g>=h;g--)delete l.validPositions[g],void 0===t&&delete l.tests[g+1];var k,x,_=a,E=_;for(t&&(l.validPositions[a]=u.extend(!0,{},t),E++,_++),g=t?v:v-1;g<=b;g++){if(void 0!==(k=y[g])&&!0!==k.generatedInput&&(g>=v||g>=h&&c(g,y,{begin:h,end:v}))){for(;""!==n.getTest.call(r,E).match.def;){if(!1!==(x=p.call(r,E,k,s))||"+"===k.match.def){"+"===k.match.def&&o.getBuffer.call(r,!0);var S=d.call(r,E,k.input,"+"!==k.match.def,!0);if(m=!1!==S,_=(S.pos||E)+1,!m&&x)break}else m=!1;if(m){void 0===t&&k.match.static&&g===e.begin&&f++;break}if(!m&&o.getBuffer.call(r),E>l.maskLength)break;E++}""==n.getTest.call(r,E).match.def&&(m=!1),E=_}if(!m)break}if(!m)return l.validPositions=u.extend(!0,{},y),o.resetMaskSet.call(r,!0),!1}else t&&n.getTest.call(r,a).match.cd===t.match.cd&&(l.validPositions[a]=u.extend(!0,{},t));return o.resetMaskSet.call(r,!0),f}},5581:function(e){e.exports=JSON.parse('{"BACKSPACE":8,"BACKSPACE_SAFARI":127,"DELETE":46,"DOWN":40,"END":35,"ENTER":13,"ESCAPE":27,"HOME":36,"INSERT":45,"LEFT":37,"PAGE_DOWN":34,"PAGE_UP":33,"RIGHT":39,"SPACE":32,"TAB":9,"UP":38,"X":88,"Z":90,"CONTROL":17,"PAUSE/BREAK":19,"WINDOWS_LEFT":91,"WINDOWS_RIGHT":92,"KEY_229":229}')}},t={};function i(a){var n=t[a];if(void 0!==n)return n.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,i),r.exports}var a={};return function(){var e,t=a;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,i(3851),i(219),i(207),i(5296);var n=((e=i(2394))&&e.__esModule?e:{default:e}).default;t.default=n}(),a}()}));var __defProp=Object.defineProperty,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=function(e,t,i){return t in e?__defProp(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i},__spreadValues=function(e,t){for(var i in t||(t={}))__hasOwnProp.call(t,i)&&__defNormalProp(e,i,t[i]);if(__getOwnPropSymbols){var a,n=_createForOfIteratorHelper(__getOwnPropSymbols(t));try{for(n.s();!(a=n.n()).done;){i=a.value;__propIsEnum.call(t,i)&&__defNormalProp(e,i,t[i])}}catch(e){n.e(e)}finally{n.f()}}return e},__publicField=function(e,t,i){return __defNormalProp(e,"symbol"!=_typeof(t)?t+"":t,i),i};!function(e,t){"object"==("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).JustValidate=t()}(void 0,(function(){var e=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,t=/^[0-9]+$/,i=/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/,a=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,n=function(e){return e.Required="required",e.Email="email",e.MinLength="minLength",e.MaxLength="maxLength",e.Password="password",e.Number="number",e.MaxNumber="maxNumber",e.MinNumber="minNumber",e.StrongPassword="strongPassword",e.CustomRegexp="customRegexp",e.MinFilesCount="minFilesCount",e.MaxFilesCount="maxFilesCount",e.Files="files",e}(n||{}),r=function(e){return e.Required="required",e}(r||{}),o=function(e){return e.Label="label",e.LabelArrow="labelArrow",e}(o||{}),l=function(e){return!!e&&"function"==typeof e.then},s=function(e){return Array.isArray(e)?e.filter((function(e){return e.length>0})):"string"==typeof e&&e.trim()?_toConsumableArray(e.split(" ").filter((function(e){return e.length>0}))):[]},u={errorFieldStyle:{color:"#b81111",border:"1px solid #B81111"},errorFieldCssClass:"just-validate-error-field",successFieldCssClass:"just-validate-success-field",errorLabelStyle:{color:"#b81111"},errorLabelCssClass:"just-validate-error-label",successLabelCssClass:"just-validate-success-label",focusInvalidField:!0,lockForm:!0,testingMode:!1};return function(){function c(e,t,i){var a=this;_classCallCheck(this,c),__publicField(this,"form",null),__publicField(this,"fields",{}),__publicField(this,"groupFields",{}),__publicField(this,"errors",{}),__publicField(this,"isValid",!1),__publicField(this,"isSubmitted",!1),__publicField(this,"globalConfig",u),__publicField(this,"errorLabels",{}),__publicField(this,"successLabels",{}),__publicField(this,"eventListeners",[]),__publicField(this,"dictLocale",[]),__publicField(this,"currentLocale"),__publicField(this,"customStyleTags",{}),__publicField(this,"onSuccessCallback"),__publicField(this,"onFailCallback"),__publicField(this,"tooltips",[]),__publicField(this,"lastScrollPosition"),__publicField(this,"isScrollTick"),__publicField(this,"refreshAllTooltips",(function(){a.tooltips.forEach((function(e){e.refresh()}))})),__publicField(this,"handleDocumentScroll",(function(){a.lastScrollPosition=window.scrollY,a.isScrollTick||(window.requestAnimationFrame((function(){a.refreshAllTooltips(),a.isScrollTick=!1})),a.isScrollTick=!0)})),__publicField(this,"formSubmitHandler",(function(e){e.preventDefault(),a.isSubmitted=!0,a.validateHandler(e)})),__publicField(this,"handleFieldChange",(function(e){var t;for(var i in a.fields)if(a.fields[i].elem===e){t=i;break}t&&a.validateField(t,!0)})),__publicField(this,"handleGroupChange",(function(e){var t,i;for(var n in a.groupFields){var r=a.groupFields[n];if(r.elems.find((function(t){return t===e}))){t=r,i=n;break}}t&&i&&a.validateGroup(i,t)})),__publicField(this,"handlerChange",(function(e){e.target&&(a.handleFieldChange(e.target),a.handleGroupChange(e.target),a.renderErrors())})),this.initialize(e,t,i)}return _createClass(c,[{key:"initialize",value:function(e,t,i){if(this.form=null,this.errors={},this.isValid=!1,this.isSubmitted=!1,this.globalConfig=u,this.errorLabels={},this.successLabels={},this.eventListeners=[],this.customStyleTags={},this.tooltips=[],"string"==typeof e){var a=document.querySelector(e);if(!a)throw Error("Form with ".concat(e," selector not found! Please check the form selector"));this.setForm(a)}else{if(!(e instanceof HTMLFormElement))throw Error("Form selector is not valid. Please specify a string selector or a DOM element.");this.setForm(e)}if(this.globalConfig=__spreadValues(__spreadValues({},u),t),i&&(this.dictLocale=i),this.isTooltip()){var n=document.createElement("style");n.textContent=".just-validate-error-label[data-tooltip=true]{position:fixed;padding:4px 8px;background:#423f3f;color:#fff;white-space:nowrap;z-index:10;border-radius:4px;transform:translateY(-5px)}.just-validate-error-label[data-tooltip=true]:before{content:'';width:0;height:0;border-left:solid 5px transparent;border-right:solid 5px transparent;border-bottom:solid 5px #423f3f;position:absolute;z-index:3;display:block;bottom:-5px;transform:rotate(180deg);left:calc(50% - 5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]{transform:translateX(-5px)}.just-validate-error-label[data-tooltip=true][data-direction=left]:before{right:-7px;bottom:auto;left:auto;top:calc(50% - 2px);transform:rotate(90deg)}.just-validate-error-label[data-tooltip=true][data-direction=right]{transform:translateX(5px)}.just-validate-error-label[data-tooltip=true][data-direction=right]:before{right:auto;bottom:auto;left:-7px;top:calc(50% - 2px);transform:rotate(-90deg)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]{transform:translateY(5px)}.just-validate-error-label[data-tooltip=true][data-direction=bottom]:before{right:auto;bottom:auto;left:calc(50% - 5px);top:-5px;transform:rotate(0)}",this.customStyleTags[o.Label]=document.head.appendChild(n),this.addListener("scroll",document,this.handleDocumentScroll)}}},{key:"getLocalisedString",value:function(e){var t;return this.currentLocale&&this.dictLocale.length&&(null==(t=this.dictLocale.find((function(t){return t.key===e})))?void 0:t.dict[this.currentLocale])||e}},{key:"getFieldErrorMessage",value:function(e,t){var i="function"==typeof e.errorMessage?e.errorMessage(this.getElemValue(t),this.fields):e.errorMessage;return this.getLocalisedString(i)||function(e,t){switch(e){case n.Required:return"The field is required";case n.Email:return"Email has invalid format";case n.MaxLength:return"The field must contain a maximum of :value characters".replace(":value",String(t));case n.MinLength:return"The field must contain a minimum of :value characters".replace(":value",String(t));case n.Password:return"Password must contain minimum eight characters, at least one letter and one number";case n.Number:return"Value should be a number";case n.StrongPassword:return"Password should contain minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character";case n.MaxNumber:return"Number should be less or equal than :value".replace(":value",String(t));case n.MinNumber:return"Number should be more or equal than :value".replace(":value",String(t));case n.MinFilesCount:return"Files count should be more or equal than :value".replace(":value",String(t));case n.MaxFilesCount:return"Files count should be less or equal than :value".replace(":value",String(t));case n.Files:return"Uploaded files have one or several invalid properties (extension/size/type etc)";default:return"Value is incorrect"}}(e.rule,e.value)}},{key:"getFieldSuccessMessage",value:function(e,t){var i="function"==typeof e?e(this.getElemValue(t),this.fields):e;return this.getLocalisedString(i)}},{key:"getGroupErrorMessage",value:function(e){return this.getLocalisedString(e.errorMessage)||(e.rule===r.Required?"The field is required":"Group is incorrect")}},{key:"getGroupSuccessMessage",value:function(e){return this.getLocalisedString(e.successMessage)}},{key:"setFieldInvalid",value:function(e,t){this.fields[e].isValid=!1,this.fields[e].errorMessage=this.getFieldErrorMessage(t,this.fields[e].elem)}},{key:"setFieldValid",value:function(e,t){this.fields[e].isValid=!0,void 0!==t&&(this.fields[e].successMessage=this.getFieldSuccessMessage(t,this.fields[e].elem))}},{key:"setGroupInvalid",value:function(e,t){this.groupFields[e].isValid=!1,this.groupFields[e].errorMessage=this.getGroupErrorMessage(t)}},{key:"setGroupValid",value:function(e,t){this.groupFields[e].isValid=!0,this.groupFields[e].successMessage=this.getGroupSuccessMessage(t)}},{key:"getElemValue",value:function(e){switch(e.type){case"checkbox":return e.checked;case"file":return e.files;default:return e.value}}},{key:"validateGroupRule",value:function(e,t,i){i.rule===r.Required&&(t.every((function(e){return!e.checked}))?this.setGroupInvalid(e,i):this.setGroupValid(e,i))}},{key:"validateFieldRule",value:function(r,o,s){var u,c=this,f=arguments.length>3&&void 0!==arguments[3]&&arguments[3],d=s.value,p=this.getElemValue(o);if(s.plugin)s.plugin(p,this.fields)||this.setFieldInvalid(r,s);else switch(s.rule){case n.Required:(function(e){var t=e;return"string"==typeof e&&(t=e.trim()),!t})(p)&&this.setFieldInvalid(r,s);break;case n.Email:if("string"!=typeof p){this.setFieldInvalid(r,s);break}u=p,e.test(u)||this.setFieldInvalid(r,s);break;case n.MaxLength:if(void 0===d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field is not defined. The field will be always invalid.")),this.setFieldInvalid(r,s);break}if("number"!=typeof d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] should be a number. The field will be always invalid.")),this.setFieldInvalid(r,s);break}if("string"!=typeof p){this.setFieldInvalid(r,s);break}if(""===p)break;(function(e,t){return e.length>t})(p,d)&&this.setFieldInvalid(r,s);break;case n.MinLength:if(void 0===d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field is not defined. The field will be always invalid.")),this.setFieldInvalid(r,s);break}if("number"!=typeof d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] should be a number. The field will be always invalid.")),this.setFieldInvalid(r,s);break}if("string"!=typeof p){this.setFieldInvalid(r,s);break}if(""===p)break;(function(e,t){return e.length<t})(p,d)&&this.setFieldInvalid(r,s);break;case n.Password:if("string"!=typeof p){this.setFieldInvalid(r,s);break}if(""===p)break;(function(e){return i.test(e)})(p)||this.setFieldInvalid(r,s);break;case n.StrongPassword:if("string"!=typeof p){this.setFieldInvalid(r,s);break}if(""===p)break;(function(e){return a.test(e)})(p)||this.setFieldInvalid(r,s);break;case n.Number:if("string"!=typeof p){this.setFieldInvalid(r,s);break}if(""===p)break;(function(e){return t.test(e)})(p)||this.setFieldInvalid(r,s);break;case n.MaxNumber:if(void 0===d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field is not defined. The field will be always invalid.")),this.setFieldInvalid(r,s);break}if("number"!=typeof d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field should be a number. The field will be always invalid.")),this.setFieldInvalid(r,s);break}if("string"!=typeof p){this.setFieldInvalid(r,s);break}if(""===p)break;var h=+p;(Number.isNaN(h)||function(e,t){return e>t}(h,d))&&this.setFieldInvalid(r,s);break;case n.MinNumber:if(void 0===d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field is not defined. The field will be always invalid.")),this.setFieldInvalid(r,s);break}if("number"!=typeof d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field should be a number. The field will be always invalid.")),this.setFieldInvalid(r,s);break}if("string"!=typeof p){this.setFieldInvalid(r,s);break}if(""===p)break;var v=+p;(Number.isNaN(v)||function(e,t){return e<t}(v,d))&&this.setFieldInvalid(r,s);break;case n.CustomRegexp:if(void 0===d)return console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field is not defined. This field will be always invalid.")),void this.setFieldInvalid(r,s);var m;try{m=new RegExp(d)}catch(e){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] should be a valid regexp. This field will be always invalid.")),this.setFieldInvalid(r,s);break}var g=String(p);""===g||m.test(g)||this.setFieldInvalid(r,s);break;case n.MinFilesCount:if(void 0===d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field is not defined. This field will be always invalid.")),this.setFieldInvalid(r,s);break}if("number"!=typeof d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field should be a number. The field will be always invalid.")),this.setFieldInvalid(r,s);break}if(Number.isFinite(null==p?void 0:p.length)&&p.length<d){this.setFieldInvalid(r,s);break}break;case n.MaxFilesCount:if(void 0===d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field is not defined. This field will be always invalid.")),this.setFieldInvalid(r,s);break}if("number"!=typeof d){console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field should be a number. The field will be always invalid.")),this.setFieldInvalid(r,s);break}if(Number.isFinite(null==p?void 0:p.length)&&p.length>d){this.setFieldInvalid(r,s);break}break;case n.Files:if(void 0===d)return console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field is not defined. This field will be always invalid.")),void this.setFieldInvalid(r,s);if("object"!=_typeof(d))return console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field should be an object. This field will be always invalid.")),void this.setFieldInvalid(r,s);var y=d.files;if("object"!=_typeof(y))return console.error("Value for ".concat(s.rule," rule for [").concat(r,"] field should be an object with files array. This field will be always invalid.")),void this.setFieldInvalid(r,s);var b=function(e,t){var i=Number.isFinite(t.minSize)&&e.size<t.minSize,a=Number.isFinite(t.maxSize)&&e.size>t.maxSize,n=Array.isArray(t.names)&&!t.names.includes(e.name),r=Array.isArray(t.extensions)&&!t.extensions.includes(e.name.split(".")[e.name.split(".").length-1]),o=Array.isArray(t.types)&&!t.types.includes(e.type);return i||a||n||r||o};if("object"==_typeof(p)&&null!==p)for(var k=0,x=p.length;k<x;++k){var _=p.item(k);if(!_){this.setFieldInvalid(r,s);break}if(b(_,y)){this.setFieldInvalid(r,s);break}}break;default:if("function"!=typeof s.validator)return console.error("Validator for custom rule for [".concat(r,"] field should be a function. This field will be always invalid.")),void this.setFieldInvalid(r,s);var E=s.validator(p,this.fields);if("boolean"!=typeof E&&"function"!=typeof E&&console.error("Validator return value for [".concat(r,"] field should be boolean or function. It will be cast to boolean.")),"function"==typeof E){if(!f){this.fields[r].asyncCheckPending=!1;var S=E();return l(S)?S.then((function(e){e||c.setFieldInvalid(r,s)})).catch((function(){c.setFieldInvalid(r,s)})):(console.error("Validator function for custom rule for [".concat(r,"] field should return a Promise. This field will be always invalid.")),void this.setFieldInvalid(r,s))}this.fields[r].asyncCheckPending=!0}E||this.setFieldInvalid(r,s)}}},{key:"validateField",value:function(e){var t,i=this,a=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.fields[e];n.isValid=!0;var r=[];return _toConsumableArray(n.rules).reverse().forEach((function(t){var o=i.validateFieldRule(e,n.elem,t,a);l(o)&&r.push(o)})),n.isValid&&this.setFieldValid(e,null==(t=n.config)?void 0:t.successMessage),Promise.allSettled(r)}},{key:"revalidateField",value:function(e){var t=this;if("string"!=typeof e)throw Error("Field selector is not valid. Please specify a string selector.");return this.fields[e]?new Promise((function(i){t.validateField(e,!0).finally((function(){t.clearFieldStyle(e),t.clearFieldLabel(e),t.renderFieldError(e),i(!!t.fields[e].isValid)}))})):(console.error("Field not found. Check the field selector."),Promise.reject())}},{key:"validateGroup",value:function(e,t){var i=this,a=[];return _toConsumableArray(t.rules).reverse().forEach((function(n){var r=i.validateGroupRule(e,t.elems,n);l(r)&&a.push(r)})),Promise.allSettled(a)}},{key:"focusInvalidField",value:function(){var e=this,t=function(t){var i=e.fields[t];if(!i.isValid)return setTimeout((function(){return i.elem.focus()}),0),"break"};for(var i in this.fields){if("break"===t(i))break}}},{key:"afterSubmitValidation",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.renderErrors(e),this.globalConfig.focusInvalidField&&this.focusInvalidField()}},{key:"validate",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return new Promise((function(i){var a=[];Object.keys(e.fields).forEach((function(t){var i=e.validateField(t);l(i)&&a.push(i)})),Object.keys(e.groupFields).forEach((function(t){var i=e.groupFields[t],n=e.validateGroup(t,i);l(n)&&a.push(n)})),a.length?Promise.allSettled(a).then((function(){e.afterSubmitValidation(t),i(!0)})):(e.afterSubmitValidation(t),i(!1))}))}},{key:"revalidate",value:function(){var e=this;return new Promise((function(t){e.validateHandler(void 0,!0).finally((function(){e.globalConfig.focusInvalidField&&e.focusInvalidField(),t(e.isValid)}))}))}},{key:"validateHandler",value:function(e){var t=this,i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.globalConfig.lockForm&&this.lockForm(),this.validate(i).finally((function(){var i,a;t.globalConfig.lockForm&&t.unlockForm(),t.isValid?null==(i=t.onSuccessCallback)||i.call(t,e):null==(a=t.onFailCallback)||a.call(t,t.fields,t.groupFields)}))}},{key:"setForm",value:function(e){this.form=e,this.form.setAttribute("novalidate","novalidate"),this.removeListener("submit",this.form,this.formSubmitHandler),this.addListener("submit",this.form,this.formSubmitHandler)}},{key:"addListener",value:function(e,t,i){t.addEventListener(e,i),this.eventListeners.push({type:e,elem:t,func:i})}},{key:"removeListener",value:function(e,t,i){t.removeEventListener(e,i),this.eventListeners=this.eventListeners.filter((function(i){return i.type!==e||i.elem!==t}))}},{key:"addField",value:function(e,t,i){if("string"!=typeof e)throw Error("Field selector is not valid. Please specify a string selector.");var a=this.form.querySelector(e);if(!a)throw Error("Field with ".concat(e," selector not found! Please check the field selector."));if(!Array.isArray(t)||!t.length)throw Error("Rules argument for the field [".concat(e,"] should be an array and should contain at least 1 element."));return t.forEach((function(t){if(!("rule"in t||"validator"in t||"plugin"in t))throw Error("Rules argument for the field [".concat(e,"] must contain at least one rule or validator property."));if(!(t.validator||t.plugin||t.rule&&Object.values(n).includes(t.rule)))throw Error("Rule should be one of these types: ".concat(Object.values(n).join(", "),". Provided value: ").concat(t.rule))})),this.fields[e]={elem:a,rules:t,isValid:void 0,config:i},this.setListeners(a),this.isSubmitted&&this.validate(),this}},{key:"removeField",value:function(e){if("string"!=typeof e)throw Error("Field selector is not valid. Please specify a string selector.");if(!this.fields[e])return console.error("Field not found. Check the field selector."),this;var t=this.getListenerType(this.fields[e].elem.type);return this.removeListener(t,this.fields[e].elem,this.handlerChange),this.clearErrors(),delete this.fields[e],this}},{key:"removeGroup",value:function(e){var t=this;if("string"!=typeof e)throw Error("Group selector is not valid. Please specify a string selector.");return this.groupFields[e]?(this.groupFields[e].elems.forEach((function(e){var i=t.getListenerType(e.type);t.removeListener(i,e,t.handlerChange)})),this.clearErrors(),delete this.groupFields[e],this):(console.error("Group not found. Check the group selector."),this)}},{key:"addRequiredGroup",value:function(e,t,i,a){var n=this;if("string"!=typeof e)throw Error("Group selector is not valid. Please specify a string selector.");var o=this.form.querySelector(e);if(!o)throw Error("Group with ".concat(e," selector not found! Please check the group selector."));var l=o.querySelectorAll("input"),s=Array.from(l).filter((function(e){var t=function(e,t){for(var i=_toConsumableArray(t).reverse(),a=0,n=i.length;a<n;++a){var r=i[a];for(var o in e){var l=e[o];if(l.groupElem===r)return[o,l]}}return null}(n.groupFields,function(e){for(var t=e,i=[];t;)i.unshift(t),t=t.parentNode;return i}(e));return!t||t[1].elems.find((function(t){return t!==e}))}));return this.groupFields[e]={rules:[{rule:r.Required,errorMessage:t,successMessage:a}],groupElem:o,elems:s,isDirty:!1,isValid:void 0,config:i},l.forEach((function(e){n.setListeners(e)})),this}},{key:"getListenerType",value:function(e){switch(e){case"checkbox":case"select-one":case"file":case"radio":return"change";default:return"input"}}},{key:"setListeners",value:function(e){var t=this.getListenerType(e.type);this.removeListener(t,e,this.handlerChange),this.addListener(t,e,this.handlerChange)}},{key:"clearFieldLabel",value:function(e){var t,i;null==(t=this.errorLabels[e])||t.remove(),null==(i=this.successLabels[e])||i.remove()}},{key:"clearFieldStyle",value:function(e){var t,i,a,n,r,o=this.fields[e],l=(null==(i=o.config)?void 0:i.errorFieldStyle)||this.globalConfig.errorFieldStyle;Object.keys(l).forEach((function(e){o.elem.style[e]=""}));var u=(null==(a=o.config)?void 0:a.successFieldStyle)||this.globalConfig.successFieldStyle||{};Object.keys(u).forEach((function(e){o.elem.style[e]=""})),(t=o.elem.classList).remove.apply(t,_toConsumableArray(s((null==(n=o.config)?void 0:n.errorFieldCssClass)||this.globalConfig.errorFieldCssClass)).concat(_toConsumableArray(s((null==(r=o.config)?void 0:r.successFieldCssClass)||this.globalConfig.successFieldCssClass))))}},{key:"clearErrors",value:function(){var e,t,i=this;for(var a in Object.keys(this.errorLabels).forEach((function(e){return i.errorLabels[e].remove()})),Object.keys(this.successLabels).forEach((function(e){return i.successLabels[e].remove()})),this.fields)this.clearFieldStyle(a);var n=function(a){var n=i.groupFields[a],r=(null==(e=n.config)?void 0:e.errorFieldStyle)||i.globalConfig.errorFieldStyle;Object.keys(r).forEach((function(e){n.elems.forEach((function(t){var a,r;t.style[e]="",(a=t.classList).remove.apply(a,_toConsumableArray(s((null==(r=n.config)?void 0:r.errorFieldCssClass)||i.globalConfig.errorFieldCssClass)))}))}));var o=(null==(t=n.config)?void 0:t.successFieldStyle)||i.globalConfig.successFieldStyle||{};Object.keys(o).forEach((function(e){n.elems.forEach((function(t){var a,r;t.style[e]="",(a=t.classList).remove.apply(a,_toConsumableArray(s((null==(r=n.config)?void 0:r.successFieldCssClass)||i.globalConfig.successFieldCssClass)))}))}))};for(var r in this.groupFields)n(r);this.tooltips=[]}},{key:"isTooltip",value:function(){return!!this.globalConfig.tooltip}},{key:"lockForm",value:function(){for(var e=this.form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)e[t].setAttribute("data-just-validate-fallback-disabled",e[t].disabled?"true":"false"),e[t].setAttribute("disabled","disabled"),e[t].style.pointerEvents="none",e[t].style.webkitFilter="grayscale(100%)",e[t].style.filter="grayscale(100%)"}},{key:"unlockForm",value:function(){for(var e=this.form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)"true"!==e[t].getAttribute("data-just-validate-fallback-disabled")&&e[t].removeAttribute("disabled"),e[t].style.pointerEvents="",e[t].style.webkitFilter="",e[t].style.filter=""}},{key:"renderTooltip",value:function(e,t,i){var a,n=this,r=e.getBoundingClientRect(),o=r.top,l=r.left,s=r.width,u=r.height,c=t.getBoundingClientRect(),f=i||(null==(a=this.globalConfig.tooltip)?void 0:a.position);switch(f){case"left":t.style.top=o+u/2-c.height/2+"px",t.style.left=l-c.width-5+"px";break;case"top":t.style.top=o-c.height-5+"px",t.style.left=l+s/2-c.width/2+"px";break;case"right":t.style.top=o+u/2-c.height/2+"px",t.style.left="".concat(l+s+5,"px");break;case"bottom":t.style.top="".concat(o+u+5,"px"),t.style.left=l+s/2-c.width/2+"px"}return t.dataset.direction=f,{refresh:function(){n.renderTooltip(e,t,i)}}}},{key:"createErrorLabelElem",value:function(e,t,i){var a,n=document.createElement("div");n.innerHTML=t;var r=this.isTooltip()?null==i?void 0:i.errorLabelStyle:(null==i?void 0:i.errorLabelStyle)||this.globalConfig.errorLabelStyle;return Object.assign(n.style,r),(a=n.classList).add.apply(a,_toConsumableArray(s((null==i?void 0:i.errorLabelCssClass)||this.globalConfig.errorLabelCssClass)).concat(["just-validate-error-label"])),this.isTooltip()&&(n.dataset.tooltip="true"),this.globalConfig.testingMode&&(n.dataset.testId="error-label-".concat(e)),this.errorLabels[e]=n,n}},{key:"createSuccessLabelElem",value:function(e,t,i){var a;if(void 0===t)return null;var n=document.createElement("div");n.innerHTML=t;var r=(null==i?void 0:i.successLabelStyle)||this.globalConfig.successLabelStyle;return Object.assign(n.style,r),(a=n.classList).add.apply(a,_toConsumableArray(s((null==i?void 0:i.successLabelCssClass)||this.globalConfig.successLabelCssClass)).concat(["just-validate-success-label"])),this.globalConfig.testingMode&&(n.dataset.testId="success-label-".concat(e)),this.successLabels[e]=n,n}},{key:"renderErrorsContainer",value:function(e,t){var i=t||this.globalConfig.errorsContainer;if("string"==typeof i){var a=this.form.querySelector(i);if(a)return a.appendChild(e),!0;console.error("Error container with ".concat(i," selector not found. Errors will be rendered as usual"))}return i instanceof Element?(i.appendChild(e),!0):(void 0!==i&&console.error("Error container not found. It should be a string or existing Element. Errors will be rendered as usual"),!1)}},{key:"renderGroupLabel",value:function(e,t,i,a){!a&&this.renderErrorsContainer(t,i)||e.appendChild(t)}},{key:"renderFieldLabel",value:function(e,t,i,a){var n,r,o,l,s,u,c;if(a||!this.renderErrorsContainer(t,i))if("checkbox"===e.type||"radio"===e.type){var f=document.querySelector('label[for="'.concat(e.getAttribute("id"),'"]'));"label"===(null==(r=null==(n=e.parentElement)?void 0:n.tagName)?void 0:r.toLowerCase())?null==(l=null==(o=e.parentElement)?void 0:o.parentElement)||l.appendChild(t):f?null==(s=f.parentElement)||s.appendChild(t):null==(u=e.parentElement)||u.appendChild(t)}else null==(c=e.parentElement)||c.appendChild(t)}},{key:"showLabels",value:function(e,t){var i=this;Object.keys(e).forEach((function(a,n){var r=e[a],o=i.fields[a];o.isValid=!t,i.clearFieldStyle(a),i.clearFieldLabel(a),i.renderFieldError(a,r),0===n&&i.globalConfig.focusInvalidField&&setTimeout((function(){return o.elem.focus()}),0)}))}},{key:"showErrors",value:function(e){if("object"!=_typeof(e))throw Error("[showErrors]: Errors should be an object with key: value format");this.showLabels(e,!0)}},{key:"showSuccessLabels",value:function(e){if("object"!=_typeof(e))throw Error("[showSuccessLabels]: Labels should be an object with key: value format");this.showLabels(e,!1)}},{key:"renderFieldError",value:function(e,t){var i,a,n,r,o,l,u,c=this.fields[e];if(c.isValid){if(!c.asyncCheckPending){var f,d=this.createSuccessLabelElem(e,void 0!==t?t:c.successMessage,c.config);d&&this.renderFieldLabel(c.elem,d,null==(a=c.config)?void 0:a.errorsContainer,!0),(f=c.elem.classList).add.apply(f,_toConsumableArray(s((null==(n=c.config)?void 0:n.successFieldCssClass)||this.globalConfig.successFieldCssClass)))}}else{this.isValid=!1,(i=c.elem.classList).add.apply(i,_toConsumableArray(s((null==(r=c.config)?void 0:r.errorFieldCssClass)||this.globalConfig.errorFieldCssClass)));var p=this.createErrorLabelElem(e,void 0!==t?t:c.errorMessage,c.config);this.renderFieldLabel(c.elem,p,null==(o=c.config)?void 0:o.errorsContainer),this.isTooltip()&&this.tooltips.push(this.renderTooltip(c.elem,p,null==(u=null==(l=c.config)?void 0:l.tooltip)?void 0:u.position))}}},{key:"renderErrors",value:function(){var e,t,i,a,n=this,r=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.isSubmitted||r){this.clearErrors(),this.isValid=!0;var o=function(r){var o=n.groupFields[r];if(o.isValid){o.elems.forEach((function(e){var t,i,a;Object.assign(e.style,(null==(i=o.config)?void 0:i.successFieldStyle)||n.globalConfig.successFieldStyle),(t=e.classList).add.apply(t,_toConsumableArray(s((null==(a=o.config)?void 0:a.successFieldCssClass)||n.globalConfig.successFieldCssClass)))}));var l=n.createSuccessLabelElem(r,o.successMessage,o.config);return l&&n.renderGroupLabel(o.groupElem,l,null==(e=o.config)?void 0:e.errorsContainer,!0),"continue"}n.isValid=!1,o.elems.forEach((function(e){var t,i,a;Object.assign(e.style,(null==(i=o.config)?void 0:i.errorFieldStyle)||n.globalConfig.errorFieldStyle),(t=e.classList).add.apply(t,_toConsumableArray(s((null==(a=o.config)?void 0:a.errorFieldCssClass)||n.globalConfig.errorFieldCssClass)))}));var u=n.createErrorLabelElem(r,o.errorMessage,o.config);n.renderGroupLabel(o.groupElem,u,null==(t=o.config)?void 0:t.errorsContainer),n.isTooltip()&&n.tooltips.push(n.renderTooltip(o.groupElem,u,null==(a=null==(i=o.config)?void 0:i.tooltip)?void 0:a.position))};for(var l in this.groupFields)o(l);for(var u in this.fields)this.renderFieldError(u)}}},{key:"destroy",value:function(){var e=this;this.eventListeners.forEach((function(t){e.removeListener(t.type,t.elem,t.func)})),Object.keys(this.customStyleTags).forEach((function(t){e.customStyleTags[t].remove()})),this.clearErrors(),this.globalConfig.lockForm&&this.unlockForm()}},{key:"refresh",value:function(){var e=this;this.destroy(),this.form?(this.initialize(this.form,this.globalConfig),Object.keys(this.fields).forEach((function(t){e.addField(t,_toConsumableArray(e.fields[t].rules),e.fields[t].config)}))):console.error("Cannot initialize the library! Form is not defined")}},{key:"setCurrentLocale",value:function(e){"string"==typeof e||void 0===e?(this.currentLocale=e,this.isSubmitted&&this.validate()):console.error("Current locale should be a string")}},{key:"onSuccess",value:function(e){return this.onSuccessCallback=e,this}},{key:"onFail",value:function(e){return this.onFailCallback=e,this}}]),c}()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
